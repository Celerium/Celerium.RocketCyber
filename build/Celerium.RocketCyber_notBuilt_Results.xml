<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="2017" errors="0" failures="22" not-run="2" inconclusive="0" ignored="0" skipped="3" invalid="0" date="2025-03-08" time="10:36:34">
  <environment clr-version="4.0.30319.42000" user-domain="BATTLESTATION" cwd="C:\Celerium\Projects\_API\Celerium.RocketCyber" platform="Microsoft Windows 11 Pro|C:\WINDOWS|\Device\Harddisk0\Partition3" machine-name="BATTLESTATION" nunit-version="2.5.8.0" os-version="10.0.26100" user="David" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Failure" success="False" time="108.9916" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\Celerium.RocketCyber.Tests.ps1" executed="True" result="Success" success="True" time="4.3941" asserts="0" description="C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\Celerium.RocketCyber.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ Celerium.RocketCyber.Tests.ps1 ]" executed="True" result="Success" success="True" time="1.9749" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ Celerium.RocketCyber.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ Celerium.RocketCyber.Tests.ps1 ].[ Celerium.RocketCyber.psd1 ] general manifest data" executed="True" result="Success" success="True" time="1.716" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ Celerium.RocketCyber.Tests.ps1 ].[ Celerium.RocketCyber.psd1 ] general manifest data">
                <results>
                  <test-case description="Manifest [ RootModule ] has valid data" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ Celerium.RocketCyber.Tests.ps1 ].[ Celerium.RocketCyber.psd1 ] general manifest data.Manifest [ RootModule ] has valid data" time="0.9595" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ ModuleVersion ] has valid data" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ Celerium.RocketCyber.Tests.ps1 ].[ Celerium.RocketCyber.psd1 ] general manifest data.Manifest [ ModuleVersion ] has valid data" time="0.0642" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ GUID ] has valid data" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ Celerium.RocketCyber.Tests.ps1 ].[ Celerium.RocketCyber.psd1 ] general manifest data.Manifest [ GUID ] has valid data" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ Author ] has valid data" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ Celerium.RocketCyber.Tests.ps1 ].[ Celerium.RocketCyber.psd1 ] general manifest data.Manifest [ Author ] has valid data" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ CompanyName ] has valid data" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ Celerium.RocketCyber.Tests.ps1 ].[ Celerium.RocketCyber.psd1 ] general manifest data.Manifest [ CompanyName ] has valid data" time="0.0085" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ Copyright ] has valid data" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ Celerium.RocketCyber.Tests.ps1 ].[ Celerium.RocketCyber.psd1 ] general manifest data.Manifest [ Copyright ] has valid data" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ Description ] is not empty" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ Celerium.RocketCyber.Tests.ps1 ].[ Celerium.RocketCyber.psd1 ] general manifest data.Manifest [ Description ] is not empty" time="0.0517" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ PowerShellVersion ] has valid data" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ Celerium.RocketCyber.Tests.ps1 ].[ Celerium.RocketCyber.psd1 ] general manifest data.Manifest [ PowerShellVersion ] has valid data" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ NestedModules ] has valid data" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ Celerium.RocketCyber.Tests.ps1 ].[ Celerium.RocketCyber.psd1 ] general manifest data.Manifest [ NestedModules ] has valid data" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ FunctionsToExport ] has valid data" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ Celerium.RocketCyber.Tests.ps1 ].[ Celerium.RocketCyber.psd1 ] general manifest data.Manifest [ FunctionsToExport ] has valid data" time="0.0111" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ CmdletsToExport ] is empty" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ Celerium.RocketCyber.Tests.ps1 ].[ Celerium.RocketCyber.psd1 ] general manifest data.Manifest [ CmdletsToExport ] is empty" time="0.0111" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ VariablesToExport ] is empty" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ Celerium.RocketCyber.Tests.ps1 ].[ Celerium.RocketCyber.psd1 ] general manifest data.Manifest [ VariablesToExport ] is empty" time="0.0128" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ AliasesToExport ] has alias" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ Celerium.RocketCyber.Tests.ps1 ].[ Celerium.RocketCyber.psd1 ] general manifest data.Manifest [ AliasesToExport ] has alias" time="0.0166" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ Tags ] has valid data" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ Celerium.RocketCyber.Tests.ps1 ].[ Celerium.RocketCyber.psd1 ] general manifest data.Manifest [ Tags ] has valid data" time="0.0689" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ LicenseUri ] has valid data" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ Celerium.RocketCyber.Tests.ps1 ].[ Celerium.RocketCyber.psd1 ] general manifest data.Manifest [ LicenseUri ] has valid data" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ ProjectUri ] has valid data" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ Celerium.RocketCyber.Tests.ps1 ].[ Celerium.RocketCyber.psd1 ] general manifest data.Manifest [ ProjectUri ] has valid data" time="0.0082" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ IconUri ] has valid data" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ Celerium.RocketCyber.Tests.ps1 ].[ Celerium.RocketCyber.psd1 ] general manifest data.Manifest [ IconUri ] has valid data" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ ReleaseNotes ] has valid data" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ Celerium.RocketCyber.Tests.ps1 ].[ Celerium.RocketCyber.psd1 ] general manifest data.Manifest [ ReleaseNotes ] has valid data" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ HelpInfoUri ] is not empty" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ Celerium.RocketCyber.Tests.ps1 ].[ Celerium.RocketCyber.psd1 ] general manifest data.Manifest [ HelpInfoUri ] is not empty" time="0.0143" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ Celerium.RocketCyber.Tests.ps1 ].[ Celerium.RocketCyber.psd1 ] module import test" executed="True" result="Success" success="True" time="1.8503" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ Celerium.RocketCyber.Tests.ps1 ].[ Celerium.RocketCyber.psd1 ] module import test">
                <results>
                  <test-case description="Module contains only PowerShell files" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ Celerium.RocketCyber.Tests.ps1 ].[ Celerium.RocketCyber.psd1 ] module import test.Module contains only PowerShell files" time="0.0486" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Module files exist" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ Celerium.RocketCyber.Tests.ps1 ].[ Celerium.RocketCyber.psd1 ] module import test.Module files exist" time="0.0464" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass Test-ModuleManifest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ Celerium.RocketCyber.Tests.ps1 ].[ Celerium.RocketCyber.psd1 ] module import test.Should pass Test-ModuleManifest" time="0.0192" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should import successfully" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ Celerium.RocketCyber.Tests.ps1 ].[ Celerium.RocketCyber.psd1 ] module import test.Should import successfully" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\HelpComment.Tests.ps1" executed="True" result="Failure" success="False" time="5.8131" asserts="0" description="C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\HelpComment.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ]" executed="True" result="Failure" success="False" time="3.9405" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests" executed="True" result="Failure" success="False" time="0.8754" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Add-RocketCyberAPIKey ]" executed="True" result="Failure" success="False" time="0.8583" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Add-RocketCyberAPIKey ]">
                    <results>
                      <test-case description="[ Add-RocketCyberAPIKey ] contains comment based help" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Add-RocketCyberAPIKey ].[ Add-RocketCyberAPIKey ] contains comment based help" time="0.0097" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-RocketCyberAPIKey ] contains a synopsis" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Add-RocketCyberAPIKey ].[ Add-RocketCyberAPIKey ] contains a synopsis" time="0.0071" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-RocketCyberAPIKey ] contains a description" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Add-RocketCyberAPIKey ].[ Add-RocketCyberAPIKey ] contains a description" time="0.0068" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-RocketCyberAPIKey ] contains at least one usage example" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Add-RocketCyberAPIKey ].[ Add-RocketCyberAPIKey ] contains at least one usage example" time="0.0126" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-RocketCyberAPIKey ] contains a note" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Add-RocketCyberAPIKey ].[ Add-RocketCyberAPIKey ] contains a note" time="0.0064" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-RocketCyberAPIKey ] contains a link" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Add-RocketCyberAPIKey ].[ Add-RocketCyberAPIKey ] contains a link" time="0.0084" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-RocketCyberAPIKey ] link should return 200" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Add-RocketCyberAPIKey ].[ Add-RocketCyberAPIKey ] link should return 200" time="0.7296" asserts="0" success="False" result="Failure" executed="True">
                        <failure>
                          <message>Expected '200', but got $null.</message>
                          <stack-trace>at $Link.StatusCode | Should -Be '200', C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\HelpComment.Tests.ps1:226
at &lt;ScriptBlock&gt;, C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\HelpComment.Tests.ps1:226</stack-trace>
                        </failure>
                      </test-case>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Add-RocketCyberAPIKey ].[ Add-RocketCyberAPIKey ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0229" asserts="0" description="[ Add-RocketCyberAPIKey ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Add-RocketCyberAPIKey ] - Parameter has a description - [ ApiKey ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Add-RocketCyberAPIKey ].[ Add-RocketCyberAPIKey ] - Parameter has a description - [ ApiKey ]" time="0.0168" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Add-RocketCyberAPIKey ] - Parameter has a description - [ ApiKeySecureString ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Add-RocketCyberAPIKey ].[ Add-RocketCyberAPIKey ] - Parameter has a description - [ ApiKeySecureString ]" time="0.0061" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Add-RocketCyberAPIKey ].[ Add-RocketCyberAPIKey ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0353" asserts="0" description="[ Add-RocketCyberAPIKey ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Add-RocketCyberAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Add-RocketCyberAPIKey ].[ Add-RocketCyberAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0139" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Add-RocketCyberAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Add-RocketCyberAPIKey ].[ Add-RocketCyberAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0145" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Add-RocketCyberAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Add-RocketCyberAPIKey ].[ Add-RocketCyberAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" time="0.007" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests" executed="True" result="Failure" success="False" time="1.0392" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Add-RocketCyberBaseUri ]" executed="True" result="Failure" success="False" time="0.1547" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Add-RocketCyberBaseUri ]">
                    <results>
                      <test-case description="[ Add-RocketCyberBaseUri ] contains comment based help" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Add-RocketCyberBaseUri ].[ Add-RocketCyberBaseUri ] contains comment based help" time="0.0057" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-RocketCyberBaseUri ] contains a synopsis" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Add-RocketCyberBaseUri ].[ Add-RocketCyberBaseUri ] contains a synopsis" time="0.0089" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-RocketCyberBaseUri ] contains a description" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Add-RocketCyberBaseUri ].[ Add-RocketCyberBaseUri ] contains a description" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-RocketCyberBaseUri ] contains at least one usage example" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Add-RocketCyberBaseUri ].[ Add-RocketCyberBaseUri ] contains at least one usage example" time="0.0099" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-RocketCyberBaseUri ] contains a note" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Add-RocketCyberBaseUri ].[ Add-RocketCyberBaseUri ] contains a note" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-RocketCyberBaseUri ] contains a link" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Add-RocketCyberBaseUri ].[ Add-RocketCyberBaseUri ] contains a link" time="0.0084" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-RocketCyberBaseUri ] link should return 200" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Add-RocketCyberBaseUri ].[ Add-RocketCyberBaseUri ] link should return 200" time="0.052" asserts="0" success="False" result="Failure" executed="True">
                        <failure>
                          <message>Expected '200', but got $null.</message>
                          <stack-trace>at $Link.StatusCode | Should -Be '200', C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\HelpComment.Tests.ps1:226
at &lt;ScriptBlock&gt;, C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\HelpComment.Tests.ps1:226</stack-trace>
                        </failure>
                      </test-case>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Add-RocketCyberBaseUri ].[ Add-RocketCyberBaseUri ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0145" asserts="0" description="[ Add-RocketCyberBaseUri ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Add-RocketCyberBaseUri ] - Parameter has a description - [ BaseUri ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Add-RocketCyberBaseUri ].[ Add-RocketCyberBaseUri ] - Parameter has a description - [ BaseUri ]" time="0.0086" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Add-RocketCyberBaseUri ] - Parameter has a description - [ DataCenter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Add-RocketCyberBaseUri ].[ Add-RocketCyberBaseUri ] - Parameter has a description - [ DataCenter ]" time="0.0059" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Add-RocketCyberBaseUri ].[ Add-RocketCyberBaseUri ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0292" asserts="0" description="[ Add-RocketCyberBaseUri ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Add-RocketCyberBaseUri ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Add-RocketCyberBaseUri ].[ Add-RocketCyberBaseUri ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0134" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Add-RocketCyberBaseUri ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Add-RocketCyberBaseUri ].[ Add-RocketCyberBaseUri ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Add-RocketCyberBaseUri ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Add-RocketCyberBaseUri ].[ Add-RocketCyberBaseUri ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" time="0.008" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests" executed="True" result="Failure" success="False" time="1.1777" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ ConvertTo-RocketCyberQueryString ]" executed="True" result="Failure" success="False" time="0.1231" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ ConvertTo-RocketCyberQueryString ]">
                    <results>
                      <test-case description="[ ConvertTo-RocketCyberQueryString ] contains comment based help" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ ConvertTo-RocketCyberQueryString ].[ ConvertTo-RocketCyberQueryString ] contains comment based help" time="0.0074" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ ConvertTo-RocketCyberQueryString ] contains a synopsis" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ ConvertTo-RocketCyberQueryString ].[ ConvertTo-RocketCyberQueryString ] contains a synopsis" time="0.0064" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ ConvertTo-RocketCyberQueryString ] contains a description" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ ConvertTo-RocketCyberQueryString ].[ ConvertTo-RocketCyberQueryString ] contains a description" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ ConvertTo-RocketCyberQueryString ] contains at least one usage example" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ ConvertTo-RocketCyberQueryString ].[ ConvertTo-RocketCyberQueryString ] contains at least one usage example" time="0.0114" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ ConvertTo-RocketCyberQueryString ] contains a note" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ ConvertTo-RocketCyberQueryString ].[ ConvertTo-RocketCyberQueryString ] contains a note" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ ConvertTo-RocketCyberQueryString ] contains a link" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ ConvertTo-RocketCyberQueryString ].[ ConvertTo-RocketCyberQueryString ] contains a link" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ ConvertTo-RocketCyberQueryString ] link should return 200" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ ConvertTo-RocketCyberQueryString ].[ ConvertTo-RocketCyberQueryString ] link should return 200" time="0.0494" asserts="0" success="False" result="Failure" executed="True">
                        <failure>
                          <message>Expected '200', but got $null.</message>
                          <stack-trace>at $Link.StatusCode | Should -Be '200', C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\HelpComment.Tests.ps1:226
at &lt;ScriptBlock&gt;, C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\HelpComment.Tests.ps1:226</stack-trace>
                        </failure>
                      </test-case>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ ConvertTo-RocketCyberQueryString ].[ ConvertTo-RocketCyberQueryString ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0128" asserts="0" description="[ ConvertTo-RocketCyberQueryString ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ ConvertTo-RocketCyberQueryString ] - Parameter has a description - [ UriFilter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ ConvertTo-RocketCyberQueryString ].[ ConvertTo-RocketCyberQueryString ] - Parameter has a description - [ UriFilter ]" time="0.0074" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ ConvertTo-RocketCyberQueryString ] - Parameter has a description - [ ResourceUri ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ ConvertTo-RocketCyberQueryString ].[ ConvertTo-RocketCyberQueryString ] - Parameter has a description - [ ResourceUri ]" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ ConvertTo-RocketCyberQueryString ].[ ConvertTo-RocketCyberQueryString ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0085" asserts="0" description="[ ConvertTo-RocketCyberQueryString ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ ConvertTo-RocketCyberQueryString ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ ConvertTo-RocketCyberQueryString ].[ ConvertTo-RocketCyberQueryString ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0085" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests" executed="True" result="Failure" success="False" time="1.3201" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Export-RocketCyberModuleSettings ]" executed="True" result="Failure" success="False" time="0.1316" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Export-RocketCyberModuleSettings ]">
                    <results>
                      <test-case description="[ Export-RocketCyberModuleSettings ] contains comment based help" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Export-RocketCyberModuleSettings ].[ Export-RocketCyberModuleSettings ] contains comment based help" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Export-RocketCyberModuleSettings ] contains a synopsis" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Export-RocketCyberModuleSettings ].[ Export-RocketCyberModuleSettings ] contains a synopsis" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Export-RocketCyberModuleSettings ] contains a description" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Export-RocketCyberModuleSettings ].[ Export-RocketCyberModuleSettings ] contains a description" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Export-RocketCyberModuleSettings ] contains at least one usage example" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Export-RocketCyberModuleSettings ].[ Export-RocketCyberModuleSettings ] contains at least one usage example" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Export-RocketCyberModuleSettings ] contains a note" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Export-RocketCyberModuleSettings ].[ Export-RocketCyberModuleSettings ] contains a note" time="0.0051" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Export-RocketCyberModuleSettings ] contains a link" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Export-RocketCyberModuleSettings ].[ Export-RocketCyberModuleSettings ] contains a link" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Export-RocketCyberModuleSettings ] link should return 200" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Export-RocketCyberModuleSettings ].[ Export-RocketCyberModuleSettings ] link should return 200" time="0.0552" asserts="0" success="False" result="Failure" executed="True">
                        <failure>
                          <message>Expected '200', but got $null.</message>
                          <stack-trace>at $Link.StatusCode | Should -Be '200', C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\HelpComment.Tests.ps1:226
at &lt;ScriptBlock&gt;, C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\HelpComment.Tests.ps1:226</stack-trace>
                        </failure>
                      </test-case>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Export-RocketCyberModuleSettings ].[ Export-RocketCyberModuleSettings ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0151" asserts="0" description="[ Export-RocketCyberModuleSettings ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Export-RocketCyberModuleSettings ] - Parameter has a description - [ RocketCyberConfigPath ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Export-RocketCyberModuleSettings ].[ Export-RocketCyberModuleSettings ] - Parameter has a description - [ RocketCyberConfigPath ]" time="0.0099" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Export-RocketCyberModuleSettings ] - Parameter has a description - [ RocketCyberConfigFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Export-RocketCyberModuleSettings ].[ Export-RocketCyberModuleSettings ] - Parameter has a description - [ RocketCyberConfigFile ]" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Export-RocketCyberModuleSettings ].[ Export-RocketCyberModuleSettings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0154" asserts="0" description="[ Export-RocketCyberModuleSettings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Export-RocketCyberModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Export-RocketCyberModuleSettings ].[ Export-RocketCyberModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0089" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Export-RocketCyberModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Export-RocketCyberModuleSettings ].[ Export-RocketCyberModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0065" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests" executed="True" result="Failure" success="False" time="1.4577" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAccount ]" executed="True" result="Failure" success="False" time="0.1298" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAccount ]">
                    <results>
                      <test-case description="[ Get-RocketCyberAccount ] contains comment based help" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAccount ].[ Get-RocketCyberAccount ] contains comment based help" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberAccount ] contains a synopsis" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAccount ].[ Get-RocketCyberAccount ] contains a synopsis" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberAccount ] contains a description" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAccount ].[ Get-RocketCyberAccount ] contains a description" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberAccount ] contains at least one usage example" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAccount ].[ Get-RocketCyberAccount ] contains at least one usage example" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberAccount ] contains a note" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAccount ].[ Get-RocketCyberAccount ] contains a note" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberAccount ] contains a link" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAccount ].[ Get-RocketCyberAccount ] contains a link" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberAccount ] link should return 200" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAccount ].[ Get-RocketCyberAccount ] link should return 200" time="0.0444" asserts="0" success="False" result="Failure" executed="True">
                        <failure>
                          <message>Expected '200', but got $null.</message>
                          <stack-trace>at $Link.StatusCode | Should -Be '200', C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\HelpComment.Tests.ps1:226
at &lt;ScriptBlock&gt;, C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\HelpComment.Tests.ps1:226</stack-trace>
                        </failure>
                      </test-case>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAccount ].[ Get-RocketCyberAccount ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0158" asserts="0" description="[ Get-RocketCyberAccount ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Get-RocketCyberAccount ] - Parameter has a description - [ AccountId ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAccount ].[ Get-RocketCyberAccount ] - Parameter has a description - [ AccountId ]" time="0.0105" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberAccount ] - Parameter has a description - [ Details ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAccount ].[ Get-RocketCyberAccount ] - Parameter has a description - [ Details ]" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAccount ].[ Get-RocketCyberAccount ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0252" asserts="0" description="[ Get-RocketCyberAccount ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-RocketCyberAccount ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAccount ].[ Get-RocketCyberAccount ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0084" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberAccount ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAccount ].[ Get-RocketCyberAccount ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0067" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberAccount ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAccount ].[ Get-RocketCyberAccount ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" time="0.0101" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests" executed="True" result="Failure" success="False" time="1.6692" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAgent ]" executed="True" result="Failure" success="False" time="0.2032" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAgent ]">
                    <results>
                      <test-case description="[ Get-RocketCyberAgent ] contains comment based help" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAgent ].[ Get-RocketCyberAgent ] contains comment based help" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberAgent ] contains a synopsis" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAgent ].[ Get-RocketCyberAgent ] contains a synopsis" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberAgent ] contains a description" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAgent ].[ Get-RocketCyberAgent ] contains a description" time="0.0084" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberAgent ] contains at least one usage example" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAgent ].[ Get-RocketCyberAgent ] contains at least one usage example" time="0.0062" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberAgent ] contains a note" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAgent ].[ Get-RocketCyberAgent ] contains a note" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberAgent ] contains a link" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAgent ].[ Get-RocketCyberAgent ] contains a link" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberAgent ] link should return 200" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAgent ].[ Get-RocketCyberAgent ] link should return 200" time="0.0442" asserts="0" success="False" result="Failure" executed="True">
                        <failure>
                          <message>Expected '200', but got $null.</message>
                          <stack-trace>at $Link.StatusCode | Should -Be '200', C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\HelpComment.Tests.ps1:226
at &lt;ScriptBlock&gt;, C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\HelpComment.Tests.ps1:226</stack-trace>
                        </failure>
                      </test-case>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAgent ].[ Get-RocketCyberAgent ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0814" asserts="0" description="[ Get-RocketCyberAgent ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Get-RocketCyberAgent ] - Parameter has a description - [ AccountId ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAgent ].[ Get-RocketCyberAgent ] - Parameter has a description - [ AccountId ]" time="0.0105" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberAgent ] - Parameter has a description - [ ID ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAgent ].[ Get-RocketCyberAgent ] - Parameter has a description - [ ID ]" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberAgent ] - Parameter has a description - [ Hostname ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAgent ].[ Get-RocketCyberAgent ] - Parameter has a description - [ Hostname ]" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberAgent ] - Parameter has a description - [ IP ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAgent ].[ Get-RocketCyberAgent ] - Parameter has a description - [ IP ]" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberAgent ] - Parameter has a description - [ Created ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAgent ].[ Get-RocketCyberAgent ] - Parameter has a description - [ Created ]" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberAgent ] - Parameter has a description - [ StartDate ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAgent ].[ Get-RocketCyberAgent ] - Parameter has a description - [ StartDate ]" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberAgent ] - Parameter has a description - [ EndDate ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAgent ].[ Get-RocketCyberAgent ] - Parameter has a description - [ EndDate ]" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberAgent ] - Parameter has a description - [ OS ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAgent ].[ Get-RocketCyberAgent ] - Parameter has a description - [ OS ]" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberAgent ] - Parameter has a description - [ Version ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAgent ].[ Get-RocketCyberAgent ] - Parameter has a description - [ Version ]" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberAgent ] - Parameter has a description - [ Connectivity ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAgent ].[ Get-RocketCyberAgent ] - Parameter has a description - [ Connectivity ]" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberAgent ] - Parameter has a description - [ Page ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAgent ].[ Get-RocketCyberAgent ] - Parameter has a description - [ Page ]" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberAgent ] - Parameter has a description - [ PageSize ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAgent ].[ Get-RocketCyberAgent ] - Parameter has a description - [ PageSize ]" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberAgent ] - Parameter has a description - [ Sort ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAgent ].[ Get-RocketCyberAgent ] - Parameter has a description - [ Sort ]" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberAgent ] - Parameter has a description - [ AllResults ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAgent ].[ Get-RocketCyberAgent ] - Parameter has a description - [ AllResults ]" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAgent ].[ Get-RocketCyberAgent ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0298" asserts="0" description="[ Get-RocketCyberAgent ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-RocketCyberAgent ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAgent ].[ Get-RocketCyberAgent ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0081" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberAgent ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAgent ].[ Get-RocketCyberAgent ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0062" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberAgent ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAgent ].[ Get-RocketCyberAgent ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberAgent ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAgent ].[ Get-RocketCyberAgent ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" time="0.0062" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests" executed="True" result="Failure" success="False" time="1.8026" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAPIKey ]" executed="True" result="Failure" success="False" time="0.1223" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAPIKey ]">
                    <results>
                      <test-case description="[ Get-RocketCyberAPIKey ] contains comment based help" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAPIKey ].[ Get-RocketCyberAPIKey ] contains comment based help" time="0.0084" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberAPIKey ] contains a synopsis" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAPIKey ].[ Get-RocketCyberAPIKey ] contains a synopsis" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberAPIKey ] contains a description" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAPIKey ].[ Get-RocketCyberAPIKey ] contains a description" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberAPIKey ] contains at least one usage example" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAPIKey ].[ Get-RocketCyberAPIKey ] contains at least one usage example" time="0.0066" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberAPIKey ] contains a note" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAPIKey ].[ Get-RocketCyberAPIKey ] contains a note" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberAPIKey ] contains a link" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAPIKey ].[ Get-RocketCyberAPIKey ] contains a link" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberAPIKey ] link should return 200" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAPIKey ].[ Get-RocketCyberAPIKey ] link should return 200" time="0.051" asserts="0" success="False" result="Failure" executed="True">
                        <failure>
                          <message>Expected '200', but got $null.</message>
                          <stack-trace>at $Link.StatusCode | Should -Be '200', C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\HelpComment.Tests.ps1:226
at &lt;ScriptBlock&gt;, C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\HelpComment.Tests.ps1:226</stack-trace>
                        </failure>
                      </test-case>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAPIKey ].[ Get-RocketCyberAPIKey ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0108" asserts="0" description="[ Get-RocketCyberAPIKey ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Get-RocketCyberAPIKey ] - Parameter has a description - [ AsPlainText ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAPIKey ].[ Get-RocketCyberAPIKey ] - Parameter has a description - [ AsPlainText ]" time="0.0108" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAPIKey ].[ Get-RocketCyberAPIKey ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="[ Get-RocketCyberAPIKey ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-RocketCyberAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAPIKey ].[ Get-RocketCyberAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0082" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberAPIKey ].[ Get-RocketCyberAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0071" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests" executed="True" result="Failure" success="False" time="1.9435" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberApp ]" executed="True" result="Failure" success="False" time="0.1329" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberApp ]">
                    <results>
                      <test-case description="[ Get-RocketCyberApp ] contains comment based help" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberApp ].[ Get-RocketCyberApp ] contains comment based help" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberApp ] contains a synopsis" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberApp ].[ Get-RocketCyberApp ] contains a synopsis" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberApp ] contains a description" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberApp ].[ Get-RocketCyberApp ] contains a description" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberApp ] contains at least one usage example" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberApp ].[ Get-RocketCyberApp ] contains at least one usage example" time="0.0065" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberApp ] contains a note" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberApp ].[ Get-RocketCyberApp ] contains a note" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberApp ] contains a link" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberApp ].[ Get-RocketCyberApp ] contains a link" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberApp ] link should return 200" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberApp ].[ Get-RocketCyberApp ] link should return 200" time="0.0522" asserts="0" success="False" result="Failure" executed="True">
                        <failure>
                          <message>Expected '200', but got $null.</message>
                          <stack-trace>at $Link.StatusCode | Should -Be '200', C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\HelpComment.Tests.ps1:226
at &lt;ScriptBlock&gt;, C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\HelpComment.Tests.ps1:226</stack-trace>
                        </failure>
                      </test-case>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberApp ].[ Get-RocketCyberApp ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0122" asserts="0" description="[ Get-RocketCyberApp ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Get-RocketCyberApp ] - Parameter has a description - [ AccountId ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberApp ].[ Get-RocketCyberApp ] - Parameter has a description - [ AccountId ]" time="0.0072" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberApp ] - Parameter has a description - [ Status ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberApp ].[ Get-RocketCyberApp ] - Parameter has a description - [ Status ]" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberApp ].[ Get-RocketCyberApp ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0237" asserts="0" description="[ Get-RocketCyberApp ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-RocketCyberApp ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberApp ].[ Get-RocketCyberApp ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0083" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberApp ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberApp ].[ Get-RocketCyberApp ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0063" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberApp ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberApp ].[ Get-RocketCyberApp ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests" executed="True" result="Failure" success="False" time="2.1121" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberBaseUri ]" executed="True" result="Failure" success="False" time="0.1604" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberBaseUri ]">
                    <results>
                      <test-case description="[ Get-RocketCyberBaseUri ] contains comment based help" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberBaseUri ].[ Get-RocketCyberBaseUri ] contains comment based help" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberBaseUri ] contains a synopsis" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberBaseUri ].[ Get-RocketCyberBaseUri ] contains a synopsis" time="0.0082" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberBaseUri ] contains a description" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberBaseUri ].[ Get-RocketCyberBaseUri ] contains a description" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberBaseUri ] contains at least one usage example" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberBaseUri ].[ Get-RocketCyberBaseUri ] contains at least one usage example" time="0.0061" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberBaseUri ] contains a note" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberBaseUri ].[ Get-RocketCyberBaseUri ] contains a note" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberBaseUri ] contains a link" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberBaseUri ].[ Get-RocketCyberBaseUri ] contains a link" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberBaseUri ] link should return 200" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberBaseUri ].[ Get-RocketCyberBaseUri ] link should return 200" time="0.0469" asserts="0" success="False" result="Failure" executed="True">
                        <failure>
                          <message>Expected '200', but got $null.</message>
                          <stack-trace>at $Link.StatusCode | Should -Be '200', C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\HelpComment.Tests.ps1:226
at &lt;ScriptBlock&gt;, C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\HelpComment.Tests.ps1:226</stack-trace>
                        </failure>
                      </test-case>
                      <test-case description="[ Get-RocketCyberBaseUri ] - Parameter has a description -" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberBaseUri ].[ Get-RocketCyberBaseUri ] - Parameter has a description -" time="0.0611" asserts="0" success="False" result="Ignored" executed="False" />
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberBaseUri ].[ Get-RocketCyberBaseUri ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0079" asserts="0" description="[ Get-RocketCyberBaseUri ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-RocketCyberBaseUri ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberBaseUri ].[ Get-RocketCyberBaseUri ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests" executed="True" result="Failure" success="False" time="2.2434" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberDefender ]" executed="True" result="Failure" success="False" time="0.1206" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberDefender ]">
                    <results>
                      <test-case description="[ Get-RocketCyberDefender ] contains comment based help" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberDefender ].[ Get-RocketCyberDefender ] contains comment based help" time="0.0059" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberDefender ] contains a synopsis" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberDefender ].[ Get-RocketCyberDefender ] contains a synopsis" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberDefender ] contains a description" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberDefender ].[ Get-RocketCyberDefender ] contains a description" time="0.0089" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberDefender ] contains at least one usage example" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberDefender ].[ Get-RocketCyberDefender ] contains at least one usage example" time="0.0064" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberDefender ] contains a note" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberDefender ].[ Get-RocketCyberDefender ] contains a note" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberDefender ] contains a link" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberDefender ].[ Get-RocketCyberDefender ] contains a link" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberDefender ] link should return 200" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberDefender ].[ Get-RocketCyberDefender ] link should return 200" time="0.0475" asserts="0" success="False" result="Failure" executed="True">
                        <failure>
                          <message>Expected '200', but got $null.</message>
                          <stack-trace>at $Link.StatusCode | Should -Be '200', C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\HelpComment.Tests.ps1:226
at &lt;ScriptBlock&gt;, C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\HelpComment.Tests.ps1:226</stack-trace>
                        </failure>
                      </test-case>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberDefender ].[ Get-RocketCyberDefender ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0071" asserts="0" description="[ Get-RocketCyberDefender ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Get-RocketCyberDefender ] - Parameter has a description - [ AccountId ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberDefender ].[ Get-RocketCyberDefender ] - Parameter has a description - [ AccountId ]" time="0.0071" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberDefender ].[ Get-RocketCyberDefender ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.019" asserts="0" description="[ Get-RocketCyberDefender ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-RocketCyberDefender ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberDefender ].[ Get-RocketCyberDefender ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0123" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberDefender ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberDefender ].[ Get-RocketCyberDefender ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0067" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests" executed="True" result="Failure" success="False" time="2.4452" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberEvent ]" executed="True" result="Failure" success="False" time="0.1906" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberEvent ]">
                    <results>
                      <test-case description="[ Get-RocketCyberEvent ] contains comment based help" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberEvent ].[ Get-RocketCyberEvent ] contains comment based help" time="0.0051" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberEvent ] contains a synopsis" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberEvent ].[ Get-RocketCyberEvent ] contains a synopsis" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberEvent ] contains a description" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberEvent ].[ Get-RocketCyberEvent ] contains a description" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberEvent ] contains at least one usage example" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberEvent ].[ Get-RocketCyberEvent ] contains at least one usage example" time="0.0113" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberEvent ] contains a note" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberEvent ].[ Get-RocketCyberEvent ] contains a note" time="0.0051" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberEvent ] contains a link" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberEvent ].[ Get-RocketCyberEvent ] contains a link" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberEvent ] link should return 200" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberEvent ].[ Get-RocketCyberEvent ] link should return 200" time="0.0471" asserts="0" success="False" result="Failure" executed="True">
                        <failure>
                          <message>Expected '200', but got $null.</message>
                          <stack-trace>at $Link.StatusCode | Should -Be '200', C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\HelpComment.Tests.ps1:226
at &lt;ScriptBlock&gt;, C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\HelpComment.Tests.ps1:226</stack-trace>
                        </failure>
                      </test-case>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberEvent ].[ Get-RocketCyberEvent ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0635" asserts="0" description="[ Get-RocketCyberEvent ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Get-RocketCyberEvent ] - Parameter has a description - [ AppId ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberEvent ].[ Get-RocketCyberEvent ] - Parameter has a description - [ AppId ]" time="0.0137" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberEvent ] - Parameter has a description - [ Verdict ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberEvent ].[ Get-RocketCyberEvent ] - Parameter has a description - [ Verdict ]" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberEvent ] - Parameter has a description - [ AccountId ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberEvent ].[ Get-RocketCyberEvent ] - Parameter has a description - [ AccountId ]" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberEvent ] - Parameter has a description - [ EventSummary ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberEvent ].[ Get-RocketCyberEvent ] - Parameter has a description - [ EventSummary ]" time="0.0057" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberEvent ] - Parameter has a description - [ Details ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberEvent ].[ Get-RocketCyberEvent ] - Parameter has a description - [ Details ]" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberEvent ] - Parameter has a description - [ Dates ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberEvent ].[ Get-RocketCyberEvent ] - Parameter has a description - [ Dates ]" time="0.008" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberEvent ] - Parameter has a description - [ Page ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberEvent ].[ Get-RocketCyberEvent ] - Parameter has a description - [ Page ]" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberEvent ] - Parameter has a description - [ PageSize ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberEvent ].[ Get-RocketCyberEvent ] - Parameter has a description - [ PageSize ]" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberEvent ] - Parameter has a description - [ Sort ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberEvent ].[ Get-RocketCyberEvent ] - Parameter has a description - [ Sort ]" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberEvent ] - Parameter has a description - [ AllResults ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberEvent ].[ Get-RocketCyberEvent ] - Parameter has a description - [ AllResults ]" time="0.0051" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberEvent ].[ Get-RocketCyberEvent ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0309" asserts="0" description="[ Get-RocketCyberEvent ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-RocketCyberEvent ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberEvent ].[ Get-RocketCyberEvent ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0082" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberEvent ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberEvent ].[ Get-RocketCyberEvent ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0094" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberEvent ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberEvent ].[ Get-RocketCyberEvent ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" time="0.0065" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberEvent ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberEvent ].[ Get-RocketCyberEvent ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" time="0.0068" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests" executed="True" result="Failure" success="False" time="2.6341" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberFirewall ]" executed="True" result="Failure" success="False" time="0.1802" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberFirewall ]">
                    <results>
                      <test-case description="[ Get-RocketCyberFirewall ] contains comment based help" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberFirewall ].[ Get-RocketCyberFirewall ] contains comment based help" time="0.0051" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberFirewall ] contains a synopsis" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberFirewall ].[ Get-RocketCyberFirewall ] contains a synopsis" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberFirewall ] contains a description" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberFirewall ].[ Get-RocketCyberFirewall ] contains a description" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberFirewall ] contains at least one usage example" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberFirewall ].[ Get-RocketCyberFirewall ] contains at least one usage example" time="0.006" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberFirewall ] contains a note" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberFirewall ].[ Get-RocketCyberFirewall ] contains a note" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberFirewall ] contains a link" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberFirewall ].[ Get-RocketCyberFirewall ] contains a link" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberFirewall ] link should return 200" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberFirewall ].[ Get-RocketCyberFirewall ] link should return 200" time="0.0441" asserts="0" success="False" result="Failure" executed="True">
                        <failure>
                          <message>Expected '200', but got $null.</message>
                          <stack-trace>at $Link.StatusCode | Should -Be '200', C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\HelpComment.Tests.ps1:226
at &lt;ScriptBlock&gt;, C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\HelpComment.Tests.ps1:226</stack-trace>
                        </failure>
                      </test-case>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberFirewall ].[ Get-RocketCyberFirewall ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0591" asserts="0" description="[ Get-RocketCyberFirewall ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Get-RocketCyberFirewall ] - Parameter has a description - [ AccountId ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberFirewall ].[ Get-RocketCyberFirewall ] - Parameter has a description - [ AccountId ]" time="0.0074" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberFirewall ] - Parameter has a description - [ DeviceId ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberFirewall ].[ Get-RocketCyberFirewall ] - Parameter has a description - [ DeviceId ]" time="0.008" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberFirewall ] - Parameter has a description - [ IPAddress ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberFirewall ].[ Get-RocketCyberFirewall ] - Parameter has a description - [ IPAddress ]" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberFirewall ] - Parameter has a description - [ MACAddress ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberFirewall ].[ Get-RocketCyberFirewall ] - Parameter has a description - [ MACAddress ]" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberFirewall ] - Parameter has a description - [ Type ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberFirewall ].[ Get-RocketCyberFirewall ] - Parameter has a description - [ Type ]" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberFirewall ] - Parameter has a description - [ Counters ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberFirewall ].[ Get-RocketCyberFirewall ] - Parameter has a description - [ Counters ]" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberFirewall ] - Parameter has a description - [ Page ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberFirewall ].[ Get-RocketCyberFirewall ] - Parameter has a description - [ Page ]" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberFirewall ] - Parameter has a description - [ PageSize ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberFirewall ].[ Get-RocketCyberFirewall ] - Parameter has a description - [ PageSize ]" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberFirewall ] - Parameter has a description - [ Sort ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberFirewall ].[ Get-RocketCyberFirewall ] - Parameter has a description - [ Sort ]" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberFirewall ] - Parameter has a description - [ AllResults ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberFirewall ].[ Get-RocketCyberFirewall ] - Parameter has a description - [ AllResults ]" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberFirewall ].[ Get-RocketCyberFirewall ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.031" asserts="0" description="[ Get-RocketCyberFirewall ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-RocketCyberFirewall ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberFirewall ].[ Get-RocketCyberFirewall ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0083" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberFirewall ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberFirewall ].[ Get-RocketCyberFirewall ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0089" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberFirewall ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberFirewall ].[ Get-RocketCyberFirewall ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" time="0.007" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberFirewall ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberFirewall ].[ Get-RocketCyberFirewall ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" time="0.0068" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests" executed="True" result="Failure" success="False" time="2.8672" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberIncident ]" executed="True" result="Failure" success="False" time="0.2223" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberIncident ]">
                    <results>
                      <test-case description="[ Get-RocketCyberIncident ] contains comment based help" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberIncident ].[ Get-RocketCyberIncident ] contains comment based help" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberIncident ] contains a synopsis" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberIncident ].[ Get-RocketCyberIncident ] contains a synopsis" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberIncident ] contains a description" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberIncident ].[ Get-RocketCyberIncident ] contains a description" time="0.0085" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberIncident ] contains at least one usage example" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberIncident ].[ Get-RocketCyberIncident ] contains at least one usage example" time="0.0067" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberIncident ] contains a note" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberIncident ].[ Get-RocketCyberIncident ] contains a note" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberIncident ] contains a link" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberIncident ].[ Get-RocketCyberIncident ] contains a link" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberIncident ] link should return 200" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberIncident ].[ Get-RocketCyberIncident ] link should return 200" time="0.0444" asserts="0" success="False" result="Failure" executed="True">
                        <failure>
                          <message>Expected '200', but got $null.</message>
                          <stack-trace>at $Link.StatusCode | Should -Be '200', C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\HelpComment.Tests.ps1:226
at &lt;ScriptBlock&gt;, C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\HelpComment.Tests.ps1:226</stack-trace>
                        </failure>
                      </test-case>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberIncident ].[ Get-RocketCyberIncident ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.087" asserts="0" description="[ Get-RocketCyberIncident ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Get-RocketCyberIncident ] - Parameter has a description - [ ID ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberIncident ].[ Get-RocketCyberIncident ] - Parameter has a description - [ ID ]" time="0.0074" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberIncident ] - Parameter has a description - [ Title ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberIncident ].[ Get-RocketCyberIncident ] - Parameter has a description - [ Title ]" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberIncident ] - Parameter has a description - [ AccountId ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberIncident ].[ Get-RocketCyberIncident ] - Parameter has a description - [ AccountId ]" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberIncident ] - Parameter has a description - [ Description ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberIncident ].[ Get-RocketCyberIncident ] - Parameter has a description - [ Description ]" time="0.0117" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberIncident ] - Parameter has a description - [ Remediation ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberIncident ].[ Get-RocketCyberIncident ] - Parameter has a description - [ Remediation ]" time="0.0058" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberIncident ] - Parameter has a description - [ ResolvedAt ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberIncident ].[ Get-RocketCyberIncident ] - Parameter has a description - [ ResolvedAt ]" time="0.0067" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberIncident ] - Parameter has a description - [ CreatedAt ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberIncident ].[ Get-RocketCyberIncident ] - Parameter has a description - [ CreatedAt ]" time="0.0064" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberIncident ] - Parameter has a description - [ Status ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberIncident ].[ Get-RocketCyberIncident ] - Parameter has a description - [ Status ]" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberIncident ] - Parameter has a description - [ Page ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberIncident ].[ Get-RocketCyberIncident ] - Parameter has a description - [ Page ]" time="0.0056" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberIncident ] - Parameter has a description - [ PageSize ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberIncident ].[ Get-RocketCyberIncident ] - Parameter has a description - [ PageSize ]" time="0.0085" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberIncident ] - Parameter has a description - [ Sort ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberIncident ].[ Get-RocketCyberIncident ] - Parameter has a description - [ Sort ]" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberIncident ] - Parameter has a description - [ AllResults ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberIncident ].[ Get-RocketCyberIncident ] - Parameter has a description - [ AllResults ]" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberIncident ].[ Get-RocketCyberIncident ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0377" asserts="0" description="[ Get-RocketCyberIncident ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-RocketCyberIncident ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberIncident ].[ Get-RocketCyberIncident ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0088" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberIncident ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberIncident ].[ Get-RocketCyberIncident ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0096" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberIncident ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberIncident ].[ Get-RocketCyberIncident ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" time="0.0065" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberIncident ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberIncident ].[ Get-RocketCyberIncident ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" time="0.0064" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberIncident ] - Example has example code &amp; description   - [  EXAMPLE 5  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberIncident ].[ Get-RocketCyberIncident ] - Example has example code &amp; description   - [  EXAMPLE 5  ]" time="0.0064" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests" executed="True" result="Failure" success="False" time="3.0064" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberModuleSettings ]" executed="True" result="Failure" success="False" time="0.1314" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberModuleSettings ]">
                    <results>
                      <test-case description="[ Get-RocketCyberModuleSettings ] contains comment based help" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberModuleSettings ].[ Get-RocketCyberModuleSettings ] contains comment based help" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberModuleSettings ] contains a synopsis" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberModuleSettings ].[ Get-RocketCyberModuleSettings ] contains a synopsis" time="0.0088" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberModuleSettings ] contains a description" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberModuleSettings ].[ Get-RocketCyberModuleSettings ] contains a description" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberModuleSettings ] contains at least one usage example" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberModuleSettings ].[ Get-RocketCyberModuleSettings ] contains at least one usage example" time="0.0063" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberModuleSettings ] contains a note" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberModuleSettings ].[ Get-RocketCyberModuleSettings ] contains a note" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberModuleSettings ] contains a link" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberModuleSettings ].[ Get-RocketCyberModuleSettings ] contains a link" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberModuleSettings ] link should return 200" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberModuleSettings ].[ Get-RocketCyberModuleSettings ] link should return 200" time="0.0492" asserts="0" success="False" result="Failure" executed="True">
                        <failure>
                          <message>Expected '200', but got $null.</message>
                          <stack-trace>at $Link.StatusCode | Should -Be '200', C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\HelpComment.Tests.ps1:226
at &lt;ScriptBlock&gt;, C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\HelpComment.Tests.ps1:226</stack-trace>
                        </failure>
                      </test-case>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberModuleSettings ].[ Get-RocketCyberModuleSettings ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.018" asserts="0" description="[ Get-RocketCyberModuleSettings ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Get-RocketCyberModuleSettings ] - Parameter has a description - [ RocketCyberConfigPath ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberModuleSettings ].[ Get-RocketCyberModuleSettings ] - Parameter has a description - [ RocketCyberConfigPath ]" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberModuleSettings ] - Parameter has a description - [ RocketCyberConfigFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberModuleSettings ].[ Get-RocketCyberModuleSettings ] - Parameter has a description - [ RocketCyberConfigFile ]" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberModuleSettings ] - Parameter has a description - [ OpenConfFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberModuleSettings ].[ Get-RocketCyberModuleSettings ] - Parameter has a description - [ OpenConfFile ]" time="0.0051" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberModuleSettings ].[ Get-RocketCyberModuleSettings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0186" asserts="0" description="[ Get-RocketCyberModuleSettings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-RocketCyberModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberModuleSettings ].[ Get-RocketCyberModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0121" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberModuleSettings ].[ Get-RocketCyberModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0065" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests" executed="True" result="Failure" success="False" time="3.1485" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberOffice ]" executed="True" result="Failure" success="False" time="0.1284" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberOffice ]">
                    <results>
                      <test-case description="[ Get-RocketCyberOffice ] contains comment based help" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberOffice ].[ Get-RocketCyberOffice ] contains comment based help" time="0.0085" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberOffice ] contains a synopsis" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberOffice ].[ Get-RocketCyberOffice ] contains a synopsis" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberOffice ] contains a description" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberOffice ].[ Get-RocketCyberOffice ] contains a description" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberOffice ] contains at least one usage example" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberOffice ].[ Get-RocketCyberOffice ] contains at least one usage example" time="0.0067" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberOffice ] contains a note" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberOffice ].[ Get-RocketCyberOffice ] contains a note" time="0.0083" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberOffice ] contains a link" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberOffice ].[ Get-RocketCyberOffice ] contains a link" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberOffice ] link should return 200" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberOffice ].[ Get-RocketCyberOffice ] link should return 200" time="0.0437" asserts="0" success="False" result="Failure" executed="True">
                        <failure>
                          <message>Expected '200', but got $null.</message>
                          <stack-trace>at $Link.StatusCode | Should -Be '200', C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\HelpComment.Tests.ps1:226
at &lt;ScriptBlock&gt;, C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\HelpComment.Tests.ps1:226</stack-trace>
                        </failure>
                      </test-case>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberOffice ].[ Get-RocketCyberOffice ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0073" asserts="0" description="[ Get-RocketCyberOffice ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Get-RocketCyberOffice ] - Parameter has a description - [ AccountId ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberOffice ].[ Get-RocketCyberOffice ] - Parameter has a description - [ AccountId ]" time="0.0073" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberOffice ].[ Get-RocketCyberOffice ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0266" asserts="0" description="[ Get-RocketCyberOffice ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-RocketCyberOffice ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberOffice ].[ Get-RocketCyberOffice ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberOffice ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberOffice ].[ Get-RocketCyberOffice ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0068" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberOffice ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Get-RocketCyberOffice ].[ Get-RocketCyberOffice ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" time="0.0071" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests" executed="True" result="Failure" success="False" time="3.2869" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Import-RocketCyberModuleSettings ]" executed="True" result="Failure" success="False" time="0.1249" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Import-RocketCyberModuleSettings ]">
                    <results>
                      <test-case description="[ Import-RocketCyberModuleSettings ] contains comment based help" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Import-RocketCyberModuleSettings ].[ Import-RocketCyberModuleSettings ] contains comment based help" time="0.0057" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Import-RocketCyberModuleSettings ] contains a synopsis" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Import-RocketCyberModuleSettings ].[ Import-RocketCyberModuleSettings ] contains a synopsis" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Import-RocketCyberModuleSettings ] contains a description" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Import-RocketCyberModuleSettings ].[ Import-RocketCyberModuleSettings ] contains a description" time="0.0083" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Import-RocketCyberModuleSettings ] contains at least one usage example" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Import-RocketCyberModuleSettings ].[ Import-RocketCyberModuleSettings ] contains at least one usage example" time="0.0065" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Import-RocketCyberModuleSettings ] contains a note" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Import-RocketCyberModuleSettings ].[ Import-RocketCyberModuleSettings ] contains a note" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Import-RocketCyberModuleSettings ] contains a link" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Import-RocketCyberModuleSettings ].[ Import-RocketCyberModuleSettings ] contains a link" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Import-RocketCyberModuleSettings ] link should return 200" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Import-RocketCyberModuleSettings ].[ Import-RocketCyberModuleSettings ] link should return 200" time="0.0463" asserts="0" success="False" result="Failure" executed="True">
                        <failure>
                          <message>Expected '200', but got $null.</message>
                          <stack-trace>at $Link.StatusCode | Should -Be '200', C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\HelpComment.Tests.ps1:226
at &lt;ScriptBlock&gt;, C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\HelpComment.Tests.ps1:226</stack-trace>
                        </failure>
                      </test-case>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Import-RocketCyberModuleSettings ].[ Import-RocketCyberModuleSettings ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0127" asserts="0" description="[ Import-RocketCyberModuleSettings ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Import-RocketCyberModuleSettings ] - Parameter has a description - [ RocketCyberConfigPath ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Import-RocketCyberModuleSettings ].[ Import-RocketCyberModuleSettings ] - Parameter has a description - [ RocketCyberConfigPath ]" time="0.0072" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Import-RocketCyberModuleSettings ] - Parameter has a description - [ RocketCyberConfigFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Import-RocketCyberModuleSettings ].[ Import-RocketCyberModuleSettings ] - Parameter has a description - [ RocketCyberConfigFile ]" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Import-RocketCyberModuleSettings ].[ Import-RocketCyberModuleSettings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0154" asserts="0" description="[ Import-RocketCyberModuleSettings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Import-RocketCyberModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Import-RocketCyberModuleSettings ].[ Import-RocketCyberModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0084" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Import-RocketCyberModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Import-RocketCyberModuleSettings ].[ Import-RocketCyberModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.007" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests" executed="True" result="Failure" success="False" time="3.4295" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Invoke-RocketCyberRequest ]" executed="True" result="Failure" success="False" time="0.1322" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Invoke-RocketCyberRequest ]">
                    <results>
                      <test-case description="[ Invoke-RocketCyberRequest ] contains comment based help" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Invoke-RocketCyberRequest ].[ Invoke-RocketCyberRequest ] contains comment based help" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Invoke-RocketCyberRequest ] contains a synopsis" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Invoke-RocketCyberRequest ].[ Invoke-RocketCyberRequest ] contains a synopsis" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Invoke-RocketCyberRequest ] contains a description" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Invoke-RocketCyberRequest ].[ Invoke-RocketCyberRequest ] contains a description" time="0.0086" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Invoke-RocketCyberRequest ] contains at least one usage example" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Invoke-RocketCyberRequest ].[ Invoke-RocketCyberRequest ] contains at least one usage example" time="0.0065" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Invoke-RocketCyberRequest ] contains a note" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Invoke-RocketCyberRequest ].[ Invoke-RocketCyberRequest ] contains a note" time="0.0051" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Invoke-RocketCyberRequest ] contains a link" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Invoke-RocketCyberRequest ].[ Invoke-RocketCyberRequest ] contains a link" time="0.0051" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Invoke-RocketCyberRequest ] link should return 200" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Invoke-RocketCyberRequest ].[ Invoke-RocketCyberRequest ] link should return 200" time="0.0521" asserts="0" success="False" result="Failure" executed="True">
                        <failure>
                          <message>Expected '200', but got $null.</message>
                          <stack-trace>at $Link.StatusCode | Should -Be '200', C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\HelpComment.Tests.ps1:226
at &lt;ScriptBlock&gt;, C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\HelpComment.Tests.ps1:226</stack-trace>
                        </failure>
                      </test-case>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Invoke-RocketCyberRequest ].[ Invoke-RocketCyberRequest ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0232" asserts="0" description="[ Invoke-RocketCyberRequest ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Invoke-RocketCyberRequest ] - Parameter has a description - [ Method ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Invoke-RocketCyberRequest ].[ Invoke-RocketCyberRequest ] - Parameter has a description - [ Method ]" time="0.007" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Invoke-RocketCyberRequest ] - Parameter has a description - [ ResourceUri ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Invoke-RocketCyberRequest ].[ Invoke-RocketCyberRequest ] - Parameter has a description - [ ResourceUri ]" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Invoke-RocketCyberRequest ] - Parameter has a description - [ UriFilter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Invoke-RocketCyberRequest ].[ Invoke-RocketCyberRequest ] - Parameter has a description - [ UriFilter ]" time="0.0057" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Invoke-RocketCyberRequest ] - Parameter has a description - [ AllResults ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Invoke-RocketCyberRequest ].[ Invoke-RocketCyberRequest ] - Parameter has a description - [ AllResults ]" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Invoke-RocketCyberRequest ].[ Invoke-RocketCyberRequest ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.009" asserts="0" description="[ Invoke-RocketCyberRequest ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Invoke-RocketCyberRequest ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Invoke-RocketCyberRequest ].[ Invoke-RocketCyberRequest ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests" executed="True" result="Failure" success="False" time="3.5582" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Remove-RocketCyberAPIKey ]" executed="True" result="Failure" success="False" time="0.1206" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Remove-RocketCyberAPIKey ]">
                    <results>
                      <test-case description="[ Remove-RocketCyberAPIKey ] contains comment based help" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Remove-RocketCyberAPIKey ].[ Remove-RocketCyberAPIKey ] contains comment based help" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-RocketCyberAPIKey ] contains a synopsis" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Remove-RocketCyberAPIKey ].[ Remove-RocketCyberAPIKey ] contains a synopsis" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-RocketCyberAPIKey ] contains a description" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Remove-RocketCyberAPIKey ].[ Remove-RocketCyberAPIKey ] contains a description" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-RocketCyberAPIKey ] contains at least one usage example" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Remove-RocketCyberAPIKey ].[ Remove-RocketCyberAPIKey ] contains at least one usage example" time="0.0104" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-RocketCyberAPIKey ] contains a note" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Remove-RocketCyberAPIKey ].[ Remove-RocketCyberAPIKey ] contains a note" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-RocketCyberAPIKey ] contains a link" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Remove-RocketCyberAPIKey ].[ Remove-RocketCyberAPIKey ] contains a link" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-RocketCyberAPIKey ] link should return 200" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Remove-RocketCyberAPIKey ].[ Remove-RocketCyberAPIKey ] link should return 200" time="0.0562" asserts="0" success="False" result="Failure" executed="True">
                        <failure>
                          <message>Expected '200', but got $null.</message>
                          <stack-trace>at $Link.StatusCode | Should -Be '200', C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\HelpComment.Tests.ps1:226
at &lt;ScriptBlock&gt;, C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\HelpComment.Tests.ps1:226</stack-trace>
                        </failure>
                      </test-case>
                      <test-case description="[ Remove-RocketCyberAPIKey ] - Parameter has a description -" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Remove-RocketCyberAPIKey ].[ Remove-RocketCyberAPIKey ] - Parameter has a description -" time="0.0105" asserts="0" success="False" result="Ignored" executed="False" />
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Remove-RocketCyberAPIKey ].[ Remove-RocketCyberAPIKey ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.009" asserts="0" description="[ Remove-RocketCyberAPIKey ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Remove-RocketCyberAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Remove-RocketCyberAPIKey ].[ Remove-RocketCyberAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests" executed="True" result="Failure" success="False" time="3.6771" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Remove-RocketCyberBaseUri ]" executed="True" result="Failure" success="False" time="0.1108" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Remove-RocketCyberBaseUri ]">
                    <results>
                      <test-case description="[ Remove-RocketCyberBaseUri ] contains comment based help" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Remove-RocketCyberBaseUri ].[ Remove-RocketCyberBaseUri ] contains comment based help" time="0.0082" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-RocketCyberBaseUri ] contains a synopsis" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Remove-RocketCyberBaseUri ].[ Remove-RocketCyberBaseUri ] contains a synopsis" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-RocketCyberBaseUri ] contains a description" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Remove-RocketCyberBaseUri ].[ Remove-RocketCyberBaseUri ] contains a description" time="0.0051" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-RocketCyberBaseUri ] contains at least one usage example" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Remove-RocketCyberBaseUri ].[ Remove-RocketCyberBaseUri ] contains at least one usage example" time="0.0063" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-RocketCyberBaseUri ] contains a note" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Remove-RocketCyberBaseUri ].[ Remove-RocketCyberBaseUri ] contains a note" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-RocketCyberBaseUri ] contains a link" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Remove-RocketCyberBaseUri ].[ Remove-RocketCyberBaseUri ] contains a link" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-RocketCyberBaseUri ] link should return 200" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Remove-RocketCyberBaseUri ].[ Remove-RocketCyberBaseUri ] link should return 200" time="0.0441" asserts="0" success="False" result="Failure" executed="True">
                        <failure>
                          <message>Expected '200', but got $null.</message>
                          <stack-trace>at $Link.StatusCode | Should -Be '200', C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\HelpComment.Tests.ps1:226
at &lt;ScriptBlock&gt;, C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\HelpComment.Tests.ps1:226</stack-trace>
                        </failure>
                      </test-case>
                      <test-case description="[ Remove-RocketCyberBaseUri ] - Parameter has a description -" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Remove-RocketCyberBaseUri ].[ Remove-RocketCyberBaseUri ] - Parameter has a description -" time="0.0068" asserts="0" success="False" result="Ignored" executed="False" />
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Remove-RocketCyberBaseUri ].[ Remove-RocketCyberBaseUri ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0123" asserts="0" description="[ Remove-RocketCyberBaseUri ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Remove-RocketCyberBaseUri ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Remove-RocketCyberBaseUri ].[ Remove-RocketCyberBaseUri ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0123" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests" executed="True" result="Failure" success="False" time="3.8092" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Remove-RocketCyberModuleSettings ]" executed="True" result="Failure" success="False" time="0.1206" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Remove-RocketCyberModuleSettings ]">
                    <results>
                      <test-case description="[ Remove-RocketCyberModuleSettings ] contains comment based help" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Remove-RocketCyberModuleSettings ].[ Remove-RocketCyberModuleSettings ] contains comment based help" time="0.0051" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-RocketCyberModuleSettings ] contains a synopsis" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Remove-RocketCyberModuleSettings ].[ Remove-RocketCyberModuleSettings ] contains a synopsis" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-RocketCyberModuleSettings ] contains a description" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Remove-RocketCyberModuleSettings ].[ Remove-RocketCyberModuleSettings ] contains a description" time="0.0084" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-RocketCyberModuleSettings ] contains at least one usage example" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Remove-RocketCyberModuleSettings ].[ Remove-RocketCyberModuleSettings ] contains at least one usage example" time="0.0061" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-RocketCyberModuleSettings ] contains a note" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Remove-RocketCyberModuleSettings ].[ Remove-RocketCyberModuleSettings ] contains a note" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-RocketCyberModuleSettings ] contains a link" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Remove-RocketCyberModuleSettings ].[ Remove-RocketCyberModuleSettings ] contains a link" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-RocketCyberModuleSettings ] link should return 200" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Remove-RocketCyberModuleSettings ].[ Remove-RocketCyberModuleSettings ] link should return 200" time="0.0456" asserts="0" success="False" result="Failure" executed="True">
                        <failure>
                          <message>Expected '200', but got $null.</message>
                          <stack-trace>at $Link.StatusCode | Should -Be '200', C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\HelpComment.Tests.ps1:226
at &lt;ScriptBlock&gt;, C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\HelpComment.Tests.ps1:226</stack-trace>
                        </failure>
                      </test-case>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Remove-RocketCyberModuleSettings ].[ Remove-RocketCyberModuleSettings ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="[ Remove-RocketCyberModuleSettings ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Remove-RocketCyberModuleSettings ] - Parameter has a description - [ RocketCyberConfigPath ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Remove-RocketCyberModuleSettings ].[ Remove-RocketCyberModuleSettings ] - Parameter has a description - [ RocketCyberConfigPath ]" time="0.0097" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Remove-RocketCyberModuleSettings ] - Parameter has a description - [ AndVariables ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Remove-RocketCyberModuleSettings ].[ Remove-RocketCyberModuleSettings ] - Parameter has a description - [ AndVariables ]" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Remove-RocketCyberModuleSettings ].[ Remove-RocketCyberModuleSettings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0148" asserts="0" description="[ Remove-RocketCyberModuleSettings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Remove-RocketCyberModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Remove-RocketCyberModuleSettings ].[ Remove-RocketCyberModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0082" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Remove-RocketCyberModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Remove-RocketCyberModuleSettings ].[ Remove-RocketCyberModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0066" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests" executed="True" result="Failure" success="False" time="3.9326" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Test-RocketCyberAPIKey ]" executed="True" result="Failure" success="False" time="0.1147" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Test-RocketCyberAPIKey ]">
                    <results>
                      <test-case description="[ Test-RocketCyberAPIKey ] contains comment based help" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Test-RocketCyberAPIKey ].[ Test-RocketCyberAPIKey ] contains comment based help" time="0.0051" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Test-RocketCyberAPIKey ] contains a synopsis" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Test-RocketCyberAPIKey ].[ Test-RocketCyberAPIKey ] contains a synopsis" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Test-RocketCyberAPIKey ] contains a description" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Test-RocketCyberAPIKey ].[ Test-RocketCyberAPIKey ] contains a description" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Test-RocketCyberAPIKey ] contains at least one usage example" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Test-RocketCyberAPIKey ].[ Test-RocketCyberAPIKey ] contains at least one usage example" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Test-RocketCyberAPIKey ] contains a note" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Test-RocketCyberAPIKey ].[ Test-RocketCyberAPIKey ] contains a note" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Test-RocketCyberAPIKey ] contains a link" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Test-RocketCyberAPIKey ].[ Test-RocketCyberAPIKey ] contains a link" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Test-RocketCyberAPIKey ] link should return 200" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Test-RocketCyberAPIKey ].[ Test-RocketCyberAPIKey ] link should return 200" time="0.0453" asserts="0" success="False" result="Failure" executed="True">
                        <failure>
                          <message>Expected '200', but got $null.</message>
                          <stack-trace>at $Link.StatusCode | Should -Be '200', C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\HelpComment.Tests.ps1:226
at &lt;ScriptBlock&gt;, C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\HelpComment.Tests.ps1:226</stack-trace>
                        </failure>
                      </test-case>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Test-RocketCyberAPIKey ].[ Test-RocketCyberAPIKey ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0104" asserts="0" description="[ Test-RocketCyberAPIKey ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Test-RocketCyberAPIKey ] - Parameter has a description - [ BaseUri ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Test-RocketCyberAPIKey ].[ Test-RocketCyberAPIKey ] - Parameter has a description - [ BaseUri ]" time="0.0104" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Test-RocketCyberAPIKey ].[ Test-RocketCyberAPIKey ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="[ Test-RocketCyberAPIKey ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Test-RocketCyberAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Test-RocketCyberAPIKey ].[ Test-RocketCyberAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0085" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Test-RocketCyberAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ HelpComment.Tests.ps1 ].[ Celerium.RocketCyber ] module help tests.[ Test-RocketCyberAPIKey ].[ Test-RocketCyberAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0067" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\PSScriptAnalyzer.tests.ps1" executed="True" result="Failure" success="False" time="94.268" asserts="0" description="C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\PSScriptAnalyzer.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ]" executed="True" result="Failure" success="False" time="89.0946" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="4.0854" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.0691" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0602" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0602" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.1044" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.026" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.026" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.1594" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0464" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0464" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.2128" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0454" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0454" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.2673" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.321" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0449" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0449" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.3746" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0454" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0454" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.4303" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0445" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0445" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.482" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.5358" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0453" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0453" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.5896" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0456" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0456" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.6444" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0467" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0467" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.698" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.7524" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0459" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0459" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.8623" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.1016" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.1016" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.9137" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.944" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0214" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0214" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.9747" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0218" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0218" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.0052" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0217" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0217" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.0383" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0243" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0243" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.0689" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0213" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0213" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.1076" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.03" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.03" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.1574" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0418" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0418" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.1859" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0202" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0202" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.2176" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0202" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0202" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.2742" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0484" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0484" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.3308" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0485" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0485" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.3868" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.4402" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0454" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0454" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.4821" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0338" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0338" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.5363" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0458" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0458" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.5881" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.6423" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.6938" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.748" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0462" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0462" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.7998" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.8548" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0464" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0464" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.907" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.9617" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.014" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0441" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0441" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.0668" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0444" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0444" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.1214" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.1735" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.2314" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0499" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0499" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.2854" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.3391" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0457" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0457" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.3957" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0485" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0485" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.4527" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0456" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0456" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.504" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.5587" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0466" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0466" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.6106" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.6651" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.7182" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0443" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0443" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.7699" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.8294" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0476" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0476" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.8857" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0477" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0477" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="3.3904" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.4931" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.4931" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="3.4438" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0452" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0452" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="3.4972" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0422" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="3.5511" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0455" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0455" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="3.6034" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0439" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0439" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="3.6556" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="3.7113" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0475" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0475" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="3.7626" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="3.8137" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="3.8682" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0461" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0461" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="3.92" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="3.974" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="4.0259" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="4.0771" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="8.1676" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="0.0602" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.052" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.052" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="0.1187" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0501" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0501" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="0.1737" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0463" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0463" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="0.2315" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0456" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0456" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="0.2867" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0469" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0469" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="0.3483" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0504" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0504" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="0.4014" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0448" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0448" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="0.458" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0485" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0485" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="0.5155" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0493" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0493" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="0.5697" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0459" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0459" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="0.6272" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0494" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0494" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="0.6802" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0448" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0448" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="0.7364" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0479" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0479" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="0.7918" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0472" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0472" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="0.8633" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0629" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0629" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="0.9182" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0457" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0457" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="0.9513" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0238" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0238" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="0.9845" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.024" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.024" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="1.0171" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0237" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0237" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="1.0503" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.024" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.024" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="1.0827" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0234" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0234" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="1.1181" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0267" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0267" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="1.1774" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0511" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0511" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="1.2313" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0453" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0453" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="1.2885" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.049" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.049" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="1.3414" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0447" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0447" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="1.399" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0493" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0493" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="1.4548" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0477" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0477" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="1.5128" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0464" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0464" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="1.5666" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0452" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0452" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="1.6245" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0497" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0497" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="1.6799" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0473" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0473" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="1.7328" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0445" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0445" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="1.7893" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0455" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0455" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="1.8442" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.047" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.047" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="1.9015" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0456" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0456" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="1.9563" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0468" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0468" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="2.0139" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0495" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0495" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="2.0676" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0452" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0452" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="2.1253" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0462" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0462" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="2.1789" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0454" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0454" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="2.2383" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0509" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0509" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="2.2924" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0461" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0461" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="2.3519" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0478" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0478" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="2.406" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.046" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.046" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="2.4628" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0457" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0457" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="2.5181" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0468" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0468" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="2.5715" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0451" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0451" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="2.6302" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0503" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0503" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="2.6851" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0462" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0462" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="2.7412" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0478" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0478" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="2.796" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0466" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0466" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="2.8549" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0496" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0496" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="2.9085" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0455" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0455" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="2.9622" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0452" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0452" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="3.0198" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0487" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0487" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="3.3503" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.3219" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.3219" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="3.4039" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0453" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0453" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="3.4612" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0491" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0491" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="3.5154" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0457" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0457" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="3.5742" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0505" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0505" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="3.6292" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="3.6835" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0454" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0454" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="3.7411" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0494" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0494" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="3.7947" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0455" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0455" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="3.8527" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0495" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0495" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="3.9068" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0456" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0456" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="3.9641" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0458" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0458" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="4.0174" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0448" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0448" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="4.0741" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0454" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APICalls\Invoke-RocketCyberRequest.ps1)" time="0.0454" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="11.6978" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.0537" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0449" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0449" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.1057" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.1597" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.2109" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.2632" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0442" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0442" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.3187" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.372" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.045" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.045" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.4285" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0451" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0451" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.4792" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.5295" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0422" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.583" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0418" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0418" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.6354" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0441" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0441" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.6884" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0449" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0449" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.7425" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.8131" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0625" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0625" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.8637" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0415" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.8939" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0211" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0211" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.9241" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0212" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0212" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.9544" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0213" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0213" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.9844" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0211" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0211" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.014" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0208" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0208" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.045" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0215" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0215" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.0752" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0213" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0213" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.1059" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0214" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0214" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.1362" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0212" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0212" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.1721" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0271" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0271" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.22" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.2581" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0299" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0299" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.3086" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.3647" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0477" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0477" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.4166" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.47" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0451" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0451" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.5298" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0483" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0483" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.5916" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0512" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0512" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.6515" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0491" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0491" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.7074" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.7588" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.8124" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0455" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0455" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.8642" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.9187" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.97" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.0216" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.0772" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0441" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0441" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.1292" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.1839" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.2347" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.287" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0441" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0441" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.3446" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0464" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0464" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.3969" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0441" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0441" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.45" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0445" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0445" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.5036" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0455" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0455" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.5591" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0456" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0456" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.6194" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0508" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0508" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.6707" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.7252" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.7767" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.8314" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0437" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.8836" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.9347" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.9906" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0476" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0476" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="3.0428" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0442" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0442" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="3.0976" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0466" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0466" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="3.1496" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0437" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="3.2037" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="3.2551" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="3.3066" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="3.3616" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0439" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0439" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="3.4175" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="3.4685" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="3.5224" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Add-RocketCyberAPIKey.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="15.7288" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.0519" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.0921" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0318" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0318" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.1422" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.198" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0445" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0445" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.25" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0439" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0439" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.3036" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.3545" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.4068" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0437" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.4606" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.5121" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.5628" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.6178" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0468" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0468" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.6695" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.7217" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.7906" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0602" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0602" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.8423" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.8727" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0212" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0212" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.9027" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0209" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0209" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.9327" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0208" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0208" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.9629" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.021" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.021" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.0208" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.0728" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.1272" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0463" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0463" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.1786" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.2339" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0469" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0469" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.2854" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.34" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.3912" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.4433" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.4967" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.5492" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0447" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0447" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.6039" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0457" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0457" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.6543" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.042" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.042" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.7085" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.7586" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.8097" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.8646" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0441" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0441" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.9163" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.9719" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0465" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0465" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.0233" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.0747" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.1285" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.1789" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.23" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.285" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0466" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0466" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.3369" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.3913" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.046" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.046" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.4421" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.4932" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.5485" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0469" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0469" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.6008" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.6534" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.7075" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.7576" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.8121" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.8633" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="3.2426" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.3697" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.3697" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="3.3032" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0473" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0473" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="3.3556" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0437" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="3.4142" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0459" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0459" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="3.4903" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0637" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0637" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="3.5587" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0578" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0578" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="3.624" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0504" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0504" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="3.6831" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0496" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0496" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="3.7388" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0454" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0454" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="3.7949" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0446" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0446" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="3.848" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0442" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0442" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="3.9088" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0511" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0511" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="3.9629" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0452" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0452" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="4.022" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0492" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Get-RocketCyberAPIKey.ps1)" time="0.0492" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="19.5418" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.055" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0448" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0448" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.113" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0493" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0493" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.168" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0464" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0464" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.2297" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0493" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0493" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.2848" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0464" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0464" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.3422" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0472" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0472" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.3995" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0481" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0481" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.4549" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0458" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0458" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.5119" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0451" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0451" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.5647" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0444" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0444" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.6156" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.6693" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.7212" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.777" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0466" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0466" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.8448" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0598" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0598" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.895" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.925" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.021" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.021" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.9558" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0215" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0215" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.985" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0204" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0204" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.0155" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0213" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0213" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.0749" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0502" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0502" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.1264" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.1812" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.232" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.2852" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0449" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0449" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.3411" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.3929" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.4443" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.4993" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0468" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0468" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.5535" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0457" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0457" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.6085" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.6602" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.7119" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.7665" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0467" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0467" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.8184" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.8736" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.9247" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.9767" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.0325" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0444" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0444" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.0848" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.1393" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.1906" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0422" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.2454" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.2997" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0443" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0443" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.3539" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0448" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0448" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.4105" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.465" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0459" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0459" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.5221" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0482" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0482" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.574" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.6278" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.681" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0449" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0449" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.7333" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.7892" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.8416" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.8981" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0481" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0481" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.9511" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0448" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0448" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="3.1002" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.1404" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.1404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="3.1519" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="3.207" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="3.2613" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="3.3172" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0478" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0478" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="3.3699" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0441" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0441" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="3.4216" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="3.4763" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0464" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0464" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="3.5259" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0414" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="3.5823" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="3.6373" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0462" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0462" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="3.6923" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0446" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0446" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="3.747" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="3.8009" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0457" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0457" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="23.1719" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.0522" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0442" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0442" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.1055" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0453" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0453" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.1601" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0422" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.2113" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.2668" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0474" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0474" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.3197" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0449" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0449" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.3719" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0442" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0442" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.4326" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0512" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0512" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.4869" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0456" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0456" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.5438" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0472" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0472" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.6018" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.049" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.049" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.6561" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0461" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0461" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.7097" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0447" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0447" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.7641" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0461" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0461" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.8336" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0616" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0616" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.8848" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.9162" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0223" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0223" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.9479" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0221" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0221" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.9809" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0229" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0229" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.0148" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0246" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0246" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.0472" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0225" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0225" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.0797" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0226" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0226" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.1112" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0219" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0219" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.1426" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0217" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0217" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.183" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0316" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0316" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.2336" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.2876" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.3388" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.3908" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.4492" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0462" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0462" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.5037" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0463" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0463" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.5562" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.6101" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.6605" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.7114" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.7657" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.8192" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0453" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0453" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.8784" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0494" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0494" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.9329" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0457" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0457" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.9863" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0454" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0454" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.041" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0461" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0461" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.0923" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.1469" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.1989" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.2503" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.3039" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.3565" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0442" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0442" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.4121" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.4632" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.5177" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0464" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0464" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.5691" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.6276" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0492" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0492" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.7013" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0649" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0649" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.7574" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0475" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0475" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.811" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0446" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0446" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.8669" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0449" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0449" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.9202" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0452" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0452" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.9735" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0445" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0445" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="3.0284" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0459" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0459" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="3.0794" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="3.1341" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0437" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="3.186" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="3.2406" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="3.2917" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="3.3434" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="3.3984" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0437" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="3.4493" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="3.5084" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0501" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0501" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="3.5652" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0466" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0466" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="3.6213" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0477" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\APIKeys\Test-RocketCyberAPIKey.ps1)" time="0.0477" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="26.721" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.0772" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0584" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0584" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.134" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0478" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0478" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.1891" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0469" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0469" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.2413" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.2974" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0466" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0466" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.3486" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.4011" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0439" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0439" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.4603" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0496" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0496" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.5125" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.5675" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.6186" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.6696" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.7258" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0476" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0476" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.7785" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0439" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0439" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.8485" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0602" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0602" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.9053" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0484" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0484" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.9497" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0353" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0353" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.9807" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0217" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0217" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.0109" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.021" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.021" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.0419" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0217" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0217" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.0719" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.021" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.021" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.1027" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0216" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0216" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.1336" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0222" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0222" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.1643" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0217" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0217" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.195" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0215" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0215" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.2265" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0221" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0221" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.2569" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0215" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0215" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.2877" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0212" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0212" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.3301" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0222" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0222" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.3801" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.4345" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.486" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.5387" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0448" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0448" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.5928" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.6517" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0499" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0499" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.7161" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0526" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0526" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.7846" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0547" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0547" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.8428" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0491" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0491" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.8977" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0465" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0465" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.95" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.0006" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.0553" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0467" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0467" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.1075" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.1591" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.2141" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0465" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0465" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.2664" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0441" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0441" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.3174" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.3722" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0468" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0468" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.4249" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0439" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0439" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.4768" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.5314" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0462" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0462" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.585" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.6386" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.6899" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.7416" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.7977" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0471" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0471" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.8514" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0443" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0443" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.9084" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0475" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0475" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.9632" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="3.0151" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0437" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="3.0662" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="3.1192" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="3.1701" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="3.2257" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.047" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.047" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="3.2764" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="3.33" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0451" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0451" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="3.3803" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0418" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0418" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="3.4349" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="3.4859" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="3.5389" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Add-RocketCyberBaseURI.ps1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="30.2497" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.0502" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0422" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.102" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0439" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0439" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.1548" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.2048" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.2604" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0476" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0476" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.3131" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0437" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.3673" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.4186" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.4726" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.5241" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.5762" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0437" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.6302" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0449" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0449" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.6811" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.7357" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0455" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0455" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.8057" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0619" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0619" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.8564" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.8874" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0221" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0221" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.9181" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0217" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0217" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.9487" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0212" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0212" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.979" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0211" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0211" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.0089" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0209" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0209" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.04" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0218" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0218" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.0705" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0217" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0217" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.101" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0217" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0217" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.1478" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0379" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.2012" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0452" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0452" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.2532" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0441" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0441" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.3078" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.3598" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.4128" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0437" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.4697" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0486" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0486" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.5219" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0442" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0442" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.5724" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.6267" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.6786" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.732" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0446" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0446" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.7855" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.836" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.8902" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0462" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0462" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.9439" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0451" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0451" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.9996" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.0514" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.1049" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.156" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.2068" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.2613" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0461" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0461" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.3117" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.3657" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0455" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0455" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.4171" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.4709" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.522" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.5727" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.627" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.6789" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.7333" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.046" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.046" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.7843" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.8393" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0441" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0441" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.8909" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.9417" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.9965" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0459" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0459" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="3.0485" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="3.102" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="3.1538" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="3.2043" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="3.2578" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="3.3094" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="3.3643" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0459" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0459" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="3.416" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="3.4699" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="3.5211" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Get-RocketCyberBaseURI.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="34.0149" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.0542" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.1053" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.1583" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0449" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0449" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.2124" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.2634" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.315" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.3695" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0422" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.4208" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.4759" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0469" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0469" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.5275" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.5815" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.6315" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0414" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.6836" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.738" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.8061" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0601" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0601" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.8573" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.8878" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0214" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0214" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.9238" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0277" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0277" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.9754" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.0293" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.0802" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.133" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.1867" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.2377" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.2936" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0478" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0478" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.3456" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0439" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0439" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.3977" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0437" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.4529" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0461" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0461" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.5042" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.5579" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.6088" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.6622" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.7129" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.7643" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.8192" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0457" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0457" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.8707" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.9217" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.9756" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.0257" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.042" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.042" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.0937" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0584" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0584" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.1591" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0548" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0548" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.2199" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.048" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.048" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.2726" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0446" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0446" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.3261" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.3799" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.4308" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.4863" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0464" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0464" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.5375" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.5913" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0456" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0456" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.6416" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.6956" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.7465" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.7973" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.8652" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0553" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0553" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.9252" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0504" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0504" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.9925" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0569" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0569" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="3.0493" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0473" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0473" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="3.1041" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="3.155" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="3.2068" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0437" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="3.2632" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0483" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0483" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="3.3144" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="3.3693" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="3.4185" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="3.4694" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="3.5229" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="3.5723" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0414" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="3.6256" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0453" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0453" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="3.6897" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0553" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0553" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="3.7564" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0541" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\BaseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0541" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="37.5675" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.0556" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0468" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0468" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.1114" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0442" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0442" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.1637" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0443" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0443" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2166" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2721" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.323" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.3753" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0442" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0442" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4283" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4792" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5344" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0465" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0465" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5861" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6402" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0458" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0458" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6931" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0446" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0446" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7481" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8196" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0624" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0624" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8715" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9028" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0218" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0218" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9333" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0214" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0214" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9633" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0211" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0211" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9946" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.022" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.022" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0251" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0217" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0217" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0559" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0217" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0217" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0871" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0219" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0219" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1179" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0215" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0215" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1646" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2197" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0463" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0463" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2715" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3257" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3777" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0441" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0441" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4305" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0446" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0446" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4816" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.5373" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0468" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0468" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.5892" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6406" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6945" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0458" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0458" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.7475" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0449" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0449" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.7987" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.8548" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.047" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.047" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9091" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0461" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0461" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9608" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0143" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0456" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0456" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0666" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1215" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1737" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2252" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2811" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0445" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0445" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3333" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3851" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.4368" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.4817" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.537" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0463" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0463" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5881" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.6442" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0449" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0449" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.696" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.7489" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0446" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0446" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.8015" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.857" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0474" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0474" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.9098" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.9602" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.0124" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0442" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0442" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.0672" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.1207" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0448" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0448" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.1767" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0478" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0478" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.2283" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0437" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.2829" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.3338" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.3863" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.4373" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.4928" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0473" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0473" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.5442" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="41.0816" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.053" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.045" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.045" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.1054" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0444" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0444" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.1601" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0468" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0468" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2116" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2629" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.3185" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0464" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0464" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.3699" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4252" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0441" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0441" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4769" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0437" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5287" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5849" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0462" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0462" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6362" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6906" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7414" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.81" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0601" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0601" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8625" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8936" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0213" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0213" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9249" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0222" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0222" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.955" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0212" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0212" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9858" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0215" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0215" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0167" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0215" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0215" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0474" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0214" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0214" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.078" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0214" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0214" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1091" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0217" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0217" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1396" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0217" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0217" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1792" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0313" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0313" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2316" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2864" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0465" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0465" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3384" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.39" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4444" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0437" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4984" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0451" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0451" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.5545" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.606" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6586" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0446" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0446" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.7182" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.769" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.8202" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.8741" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9256" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9811" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0439" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0439" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0323" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0834" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.137" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1882" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.241" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0449" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0449" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.297" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0446" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0446" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3495" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0437" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3957" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.446" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5022" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0474" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0474" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5532" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.6058" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.6594" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0422" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.7115" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0441" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0441" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.7645" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0439" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0439" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.8189" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0459" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0459" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.8702" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.9249" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0467" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0467" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.9774" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0445" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0445" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.0292" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.085" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0468" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0468" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.1368" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0437" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.1873" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.2416" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0464" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0464" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.2937" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.3477" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.3992" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.451" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.5062" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0468" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0468" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="44.6869" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.0515" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.0985" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.1531" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.205" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0437" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2566" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.3119" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.3631" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4167" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0446" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0446" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.471" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5225" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5767" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0462" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0462" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6283" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.684" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0473" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0473" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7355" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8046" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0602" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0602" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.855" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.041" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8859" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0216" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0216" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9164" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0214" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0214" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9471" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0215" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0215" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9777" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0215" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0215" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0079" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0214" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0214" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0392" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0222" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0222" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0699" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0215" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0215" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1307" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0524" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0524" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1823" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2364" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0452" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0452" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2877" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3394" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3989" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0457" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0457" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4686" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0588" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0588" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.53" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0516" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0516" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.5854" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0464" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0464" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6361" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6911" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.7428" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0437" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.7959" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0451" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0451" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.851" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9017" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9533" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0072" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0587" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1138" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0471" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0471" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1677" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0412" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2186" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2729" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3239" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3746" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.4293" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0437" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.4814" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0439" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0439" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5341" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5881" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.639" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.6947" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0477" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0477" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.7468" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.8012" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0455" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0455" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.8548" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.9071" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0442" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0442" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.9622" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0471" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0471" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.0137" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.0686" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0461" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0461" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.1199" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.1744" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.2265" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.2773" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.334" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.045" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.045" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.3848" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.4392" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.4902" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.5415" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.5965" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="48.3691" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.0526" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.1011" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.1525" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2078" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0469" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0469" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2595" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.3137" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0422" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.364" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4151" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4691" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0459" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0459" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5197" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5738" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0461" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0461" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.625" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6803" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7332" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7841" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8376" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8884" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9428" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0464" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0464" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.994" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0482" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0992" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.15" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2035" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2543" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3085" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0463" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0463" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3595" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4135" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4669" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0416" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0416" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.5214" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.5722" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6222" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6764" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.7281" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.7815" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0447" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0447" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.8322" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0422" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.8867" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.938" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9887" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0431" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0963" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1534" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0488" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0488" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2064" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0449" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0449" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2575" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3125" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0463" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0463" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3635" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.4183" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0464" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0464" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.4697" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5237" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5747" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.6253" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.6786" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0416" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0416" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.7296" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.7836" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0456" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0456" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.8343" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0422" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.8878" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.9388" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.9897" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.0437" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.095" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.1497" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0462" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0462" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.2005" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.2556" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.047" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.047" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.3073" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0437" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.3607" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0422" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.4115" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0418" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0418" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.4625" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.5159" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.5677" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.6228" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.047" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.047" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.674" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="52.0855" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.0538" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0455" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0455" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.1063" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0444" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0444" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.1602" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2122" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2643" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.3176" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.368" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0422" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4234" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0473" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0473" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4757" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0443" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0443" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5304" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5815" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6327" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6864" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7372" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8069" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0611" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0611" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8628" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0472" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0472" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9139" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9689" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0468" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0468" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0201" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0708" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1259" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1787" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0441" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0441" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2342" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2858" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3366" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3901" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4421" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0441" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0441" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4969" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0459" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0459" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.5481" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6037" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0439" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0439" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6558" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0437" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.7069" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.7612" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.814" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.8684" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0461" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0461" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9206" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9745" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0262" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0771" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1332" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0439" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0439" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1839" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2348" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2891" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3403" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3921" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.4471" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.4984" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5536" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.047" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.047" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.6049" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.6561" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.7117" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0472" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0472" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.7647" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0439" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0439" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.8164" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.8696" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.921" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.973" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.0273" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.0792" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.1311" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.1854" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.2364" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.2867" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.341" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.3926" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0437" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.4446" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.4988" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.5496" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0422" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.604" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0462" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0462" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.6571" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0451" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0451" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="3.7083" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Private\ModuleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="55.7372" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="0.0506" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="0.1022" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="0.1563" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="0.2095" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0444" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0444" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="0.2646" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0466" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0466" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="0.3155" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="0.3699" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0463" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0463" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="0.4222" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0442" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0442" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="0.4753" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.045" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.045" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="0.5306" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0465" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0465" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="0.5967" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0568" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0568" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="0.6592" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0502" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0502" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="0.7205" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0528" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0528" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="0.7741" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0456" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0456" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="0.8446" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0611" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0611" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="0.896" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0422" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="0.9267" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0215" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0215" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="0.9577" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0218" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0218" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="0.9886" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0214" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0214" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="1.0217" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0218" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0218" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="1.0526" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0221" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0221" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="1.0833" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0219" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0219" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="1.1183" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0266" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0266" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="1.1692" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="1.2253" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.048" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.048" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="1.2778" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="1.3325" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="1.3836" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="1.4369" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0454" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0454" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="1.4913" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="1.5443" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="1.599" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0464" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0464" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="1.6517" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0447" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0447" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="1.7044" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0447" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0447" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="1.7589" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0464" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0464" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="1.8102" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="1.8641" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.042" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.042" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="1.9159" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="1.9671" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="2.0225" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="2.0739" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="2.1289" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="2.1803" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="2.2321" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0437" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="2.2858" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="2.3372" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="2.3896" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0444" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0444" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="2.4449" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="2.4956" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="2.5467" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="2.6012" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0464" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0464" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="2.6534" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0443" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0443" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="2.7075" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="2.7584" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="2.81" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="2.8729" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0469" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0469" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="2.9364" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0515" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0515" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="3.0043" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0554" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0554" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="3.059" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0457" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0457" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="3.1117" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0437" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="3.1675" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0439" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0439" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="3.2186" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="3.27" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="3.321" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="3.3755" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="3.428" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="3.4832" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="3.5338" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="3.5854" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]" executed="True" result="Success" success="True" time="3.6406" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0439" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccount.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Account\Get-RocketCyberAccount.ps1)" time="0.0439" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="59.6198" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="0.0514" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="0.1044" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0445" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0445" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="0.1592" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="0.2126" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0447" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0447" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="0.2695" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0445" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0445" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="0.3297" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0512" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0512" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="0.3825" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0439" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0439" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="0.4382" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0474" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0474" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="0.4881" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0414" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="0.5435" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="0.5965" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="0.6536" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0441" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0441" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="0.7056" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0439" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0439" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="0.7595" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0459" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0459" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="0.831" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0618" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0618" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="0.8872" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0478" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0478" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="0.9409" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0451" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0451" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="0.9971" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.047" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.047" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="1.0486" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="1.1013" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0446" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0446" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="1.1567" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0474" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0474" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="1.2081" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="1.265" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0437" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="1.3174" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0443" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0443" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="1.3732" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0477" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0477" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="1.4258" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0444" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0444" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="1.4799" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0449" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0449" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="1.5363" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0482" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0482" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="1.5867" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.042" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.042" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="1.6424" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="1.6961" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0446" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0446" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="1.7495" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="1.7857" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0272" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0272" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="1.8376" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="1.8903" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0444" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0444" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="1.9452" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0422" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="1.9975" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="2.0513" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0455" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0455" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="2.1057" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="2.1598" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.046" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.046" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="2.2116" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="2.2677" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0476" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0476" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="2.322" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0463" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0463" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="2.3743" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0443" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0443" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="2.4303" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="2.4827" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="2.5362" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0455" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0455" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="2.5941" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0447" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0447" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="2.6455" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="2.6989" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="2.7575" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0499" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0499" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="2.8109" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0448" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0448" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="2.8646" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0449" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0449" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="2.9202" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0475" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0475" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="2.9742" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0459" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0459" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="3.0327" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0494" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0494" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="3.1767" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.1358" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.1358" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="3.234" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0447" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0447" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="3.2857" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="3.338" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0443" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0443" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="3.3937" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0441" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0441" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="3.4462" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="3.4989" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0443" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0443" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="3.5553" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0484" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0484" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="3.608" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0448" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0448" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="3.6614" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0441" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0441" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="3.7169" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0467" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0467" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="3.7677" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="3.8188" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]" executed="True" result="Success" success="True" time="3.8744" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgent.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Agent\Get-RocketCyberAgent.ps1)" time="0.044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="63.2158" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="0.0506" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="0.0964" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0375" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0375" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="0.148" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="0.2034" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0474" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0474" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="0.2569" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0454" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0454" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="0.3094" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0444" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0444" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="0.3646" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0463" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0463" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="0.4185" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="0.4701" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="0.5245" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="0.5754" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="0.6311" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="0.6855" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0464" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0464" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="0.7368" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="0.8071" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0617" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0617" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="0.8634" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="0.912" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="0.94" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0199" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0199" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="0.9702" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0215" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0215" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="1.001" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0217" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0217" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="1.0319" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0216" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0216" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="1.0627" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0213" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0213" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="1.0933" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0214" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0214" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="1.1245" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0219" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0219" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="1.1553" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0216" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0216" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="1.2165" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0526" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0526" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="1.2676" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="1.323" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0473" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0473" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="1.3753" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0443" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0443" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="1.4319" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0444" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0444" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="1.4841" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="1.5356" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="1.5899" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="1.6411" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="1.6962" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0464" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0464" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="1.7474" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="1.8031" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0474" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0474" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="1.8552" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0441" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0441" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="1.9095" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="1.9608" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="2.0171" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0442" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0442" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="2.0684" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="2.119" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="2.1733" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="2.2256" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0444" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0444" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="2.2813" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0467" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0467" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="2.3347" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0453" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0453" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="2.3865" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="2.4415" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0468" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0468" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="2.493" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="2.5477" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="2.5993" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="2.6512" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="2.7068" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="2.7585" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="2.8108" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="2.8632" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="2.9193" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0476" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0476" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="2.9706" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="3.0249" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="3.0762" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="3.1278" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="3.1899" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0474" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0474" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="3.2597" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0589" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0589" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="3.3204" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.051" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.051" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="3.3737" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0441" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0441" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="3.4311" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0489" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0489" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="3.4816" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="3.5369" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0437" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]" executed="True" result="Success" success="True" time="3.5885" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberApp.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\App\Get-RocketCyberApp.ps1)" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="66.7963" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.0518" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.0976" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0375" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0375" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.1521" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.2037" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.2586" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0469" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0469" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.3107" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.3633" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0444" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0444" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.4154" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.4698" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.5214" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.5766" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0469" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0469" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.6284" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0439" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0439" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.6837" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0464" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0464" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.7343" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.804" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0614" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0614" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.855" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.8858" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0214" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0214" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.9169" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0218" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0218" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.9467" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.021" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.021" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.9773" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0214" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0214" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="1.0086" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0221" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0221" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="1.0495" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.032" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.032" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="1.101" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="1.1569" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0476" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0476" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="1.2092" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0441" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0441" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="1.2632" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="1.3154" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="1.3672" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="1.4232" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0447" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0447" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="1.4743" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="1.526" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="1.5825" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0441" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0441" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="1.6335" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="1.6844" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="1.7387" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0462" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0462" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="1.7905" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="1.8459" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0475" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0475" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="1.8984" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="1.9504" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="1.9866" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0277" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0277" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="2.0362" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="2.0906" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0461" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0461" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="2.1423" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="2.1963" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="2.2467" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0418" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0418" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="2.2988" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="2.3528" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0455" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0455" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="2.4041" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="2.458" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="2.5093" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="2.5603" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="2.6166" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0444" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0444" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="2.6676" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0422" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="2.7184" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="2.7727" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="2.8249" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0442" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0442" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="2.8771" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0443" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0443" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="2.9319" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="2.9832" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="3.0387" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="3.0907" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0439" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0439" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="3.1436" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0447" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0447" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="3.1958" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="3.2514" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="3.3032" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="3.3581" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0469" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0469" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="3.41" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="3.4655" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="3.5171" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="3.5723" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Defender\Get-RocketCyberDefender.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="70.5456" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="0.0522" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="0.1094" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0455" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0455" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="0.1611" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0437" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="0.2162" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0442" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0442" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="0.2714" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="0.3235" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0437" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="0.3793" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0477" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0477" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="0.4331" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0458" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0458" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="0.4861" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="0.5417" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="0.5931" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="0.648" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="0.7006" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="0.754" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0443" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0443" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="0.8109" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0484" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0484" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="0.8658" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0469" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0469" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="0.9222" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0442" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0442" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="0.9744" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="1.027" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0446" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0446" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="1.0818" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0437" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="1.1351" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0445" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0445" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="1.1902" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="1.2423" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="1.299" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0485" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0485" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="1.3491" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0412" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="1.4047" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="1.4571" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0442" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0442" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="1.5133" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0481" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0481" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="1.565" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0437" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="1.6217" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0478" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0478" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="1.674" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="1.7325" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0498" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0498" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="1.7864" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0446" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0446" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="1.8431" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0442" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0442" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="1.8954" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0443" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0443" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="1.9478" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0443" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0443" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="1.9904" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0337" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0337" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="2.0419" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="2.0935" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="2.1488" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="2.2014" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="2.2573" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0475" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0475" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="2.31" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0446" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0446" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="2.3626" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="2.4176" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="2.47" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="2.5225" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0439" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0439" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="2.5619" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0314" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0314" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="2.6133" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="2.6661" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="2.7216" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="2.774" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0442" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0442" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="2.8295" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0475" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0475" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="2.8812" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="2.9378" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0479" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0479" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="2.9881" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="3.0439" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="3.0958" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0439" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0439" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="3.1529" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0486" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0486" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="3.2039" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="3.2606" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0483" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0483" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="3.3111" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="3.3692" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0494" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0494" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="3.4207" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="3.475" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0462" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0462" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="3.5265" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="3.5821" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="3.6352" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="3.6864" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]" executed="True" result="Success" success="True" time="3.7385" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvent.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Event\Get-RocketCyberEvent.ps1)" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="74.1055" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="0.0522" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="0.1048" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="0.1601" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0473" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0473" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="0.2126" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0444" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0444" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="0.2701" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0449" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0449" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="0.3235" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="0.375" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="0.4268" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0437" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="0.4816" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="0.5347" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0447" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0447" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="0.59" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="0.6416" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="0.6986" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0487" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0487" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="0.7541" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.042" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.042" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="0.8261" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0636" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0636" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="0.8745" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="0.9055" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0217" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0217" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="0.9371" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0223" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0223" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="0.9673" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0213" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0213" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="0.9983" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0217" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0217" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="1.0294" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0218" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0218" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="1.0602" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.022" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.022" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="1.0915" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.022" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.022" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="1.1226" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0217" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0217" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="1.1587" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0217" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0217" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="1.2071" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="1.2356" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0201" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0201" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="1.2962" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0523" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0523" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="1.348" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="1.4057" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.049" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.049" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="1.4579" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="1.5107" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="1.5672" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0479" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0479" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="1.6208" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="1.6714" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="1.7275" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0445" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0445" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="1.7794" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="1.8347" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="1.8867" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="1.9391" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="1.9817" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0344" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0344" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="2.0332" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="2.0845" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="2.1397" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="2.1923" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0445" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0445" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="2.2479" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0475" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0475" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="2.3002" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="2.3567" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0474" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0474" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="2.4106" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.042" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.042" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="2.4734" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0539" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0539" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="2.5346" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0484" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0484" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="2.5911" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0475" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0475" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="2.6438" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0446" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0446" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="2.6986" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="2.7519" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0446" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0446" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="2.8071" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0468" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0468" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="2.8596" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0445" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0445" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="2.9147" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0437" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="2.9666" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="3.0196" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="3.0622" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0342" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0342" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="3.1145" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0442" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0442" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="3.1711" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.048" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.048" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="3.2252" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0459" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0459" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="3.2763" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="3.3314" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="3.3893" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0492" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0492" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="3.4448" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="3.4966" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0437" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]" executed="True" result="Success" success="True" time="3.5486" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewall.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Firewall\Get-RocketCyberFirewall.ps1)" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="77.5857" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="0.0537" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0458" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0458" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="0.1075" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0458" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0458" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="0.164" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0479" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0479" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="0.2151" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="0.272" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0486" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0486" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="0.3219" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="0.3772" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="0.429" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="0.4854" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0484" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0484" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="0.5391" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0458" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0458" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="0.5945" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="0.646" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="0.6979" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="0.7513" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="0.8243" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0612" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0612" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="0.8762" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.042" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.042" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="0.9076" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0221" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0221" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="0.9387" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0219" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0219" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="0.9703" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0223" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0223" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="1.0013" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0222" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0222" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="1.0323" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0221" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0221" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="1.0638" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0222" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0222" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="1.0958" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0223" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0223" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="1.1271" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0218" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0218" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="1.158" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0218" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0218" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="1.1893" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0221" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0221" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="1.2201" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0218" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0218" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="1.2615" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0326" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0326" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="1.3142" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0444" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0444" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="1.371" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0487" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0487" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="1.4264" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="1.4783" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="1.5341" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0441" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0441" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="1.5863" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0442" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0442" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="1.6391" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0447" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0447" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="1.6947" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="1.7477" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0447" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0447" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="1.7991" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="1.8475" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="1.8996" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0441" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0441" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="1.934" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0264" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0264" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="1.987" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.045" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.045" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="2.0436" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0482" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0482" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="2.0948" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="2.1513" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.048" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.048" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="2.2052" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.042" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.042" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="2.2569" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="2.3091" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="2.364" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="2.4163" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0441" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0441" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="2.4719" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0477" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0477" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="2.5248" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0444" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0444" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="2.5782" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0445" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0445" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="2.6327" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="2.6852" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0444" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0444" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="2.7368" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0437" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="2.7869" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="2.8401" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0446" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0446" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="2.8968" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0475" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0475" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="2.951" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.046" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.046" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="3.0035" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0445" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0445" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="3.0595" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="3.1114" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="3.1671" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0437" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="3.2192" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0441" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0441" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="3.2712" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0439" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0439" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="3.3141" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0345" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0345" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="3.3646" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="3.4167" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]" executed="True" result="Success" success="True" time="3.4684" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0437" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncident.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Incident\Get-RocketCyberIncident.ps1)" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="81.4677" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="0.0511" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="0.098" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="0.1491" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="0.2044" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0473" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0473" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="0.2565" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0441" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0441" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="0.309" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0446" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0446" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="0.3638" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0458" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0458" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="0.4155" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="0.4711" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0475" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0475" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="0.5235" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0444" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0444" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="0.5787" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="0.6297" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="0.6817" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="0.7361" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="0.8842" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.1395" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.1395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="0.9463" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="0.9995" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0446" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0446" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="1.0549" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0473" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0473" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="1.1078" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0449" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0449" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="1.1589" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="1.212" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="1.2627" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.042" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.042" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="1.3189" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.048" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.048" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="1.37" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="1.4241" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="1.4762" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0439" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0439" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="1.5312" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="1.5825" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="1.6336" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="1.6872" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="1.7384" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="1.7926" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0463" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0463" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="1.844" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="1.8944" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0416" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0416" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="1.9484" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="2.0005" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="2.056" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0444" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0444" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="2.1075" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="2.1583" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="2.2124" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="2.2647" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="2.3172" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0442" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0442" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="2.3708" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="2.422" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="2.4758" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="2.5273" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="2.5788" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="2.633" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="2.6837" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="2.738" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0463" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0463" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="2.7894" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="2.8431" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="2.895" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="2.9464" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="3.0051" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0479" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0479" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="3.0714" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0553" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0553" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="3.1461" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0606" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0606" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="3.2188" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0611" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0611" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="3.2884" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0574" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0574" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="3.3522" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0513" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0513" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="3.4045" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0441" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0441" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="3.4553" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="3.5092" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="3.5598" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="3.6119" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="3.667" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="3.7178" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="3.7684" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="3.8218" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="3.8736" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0439" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Public\Office\Get-RocketCyberOffice.ps1)" time="0.0439" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests" executed="True" result="Failure" success="False" time="85.4233" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="0.0555" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0473" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0473" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="0.1041" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="0.1581" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="0.2105" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0445" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0445" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="0.2653" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0458" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0458" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="0.3167" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="0.3701" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0451" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0451" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="0.4207" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="0.4742" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="0.5252" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="0.5761" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="0.6295" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0418" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0418" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="0.6811" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="0.7353" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.046" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.046" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="0.7858" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0422" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="0.8393" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="0.891" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="0.9419" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="0.9957" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="1.0473" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="1.1011" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0454" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0454" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="1.1522" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="1.2065" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0462" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0462" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="1.2582" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="1.3124" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="1.3635" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0422" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="1.4548" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.083" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.083" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="1.5084" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="1.5397" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0222" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0222" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="1.5703" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0218" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0218" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="1.6077" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0291" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0291" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="1.6615" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0449" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0449" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="1.7366" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0601" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0601" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="1.802" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0549" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0549" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="1.8579" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0467" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0467" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="1.9101" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0443" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0443" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="1.9926" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.074" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.074" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="2.0439" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="2.075" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0218" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0218" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="2.106" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0218" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0218" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="2.1474" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0323" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0323" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="2.205" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.049" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.049" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="2.2568" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="2.3107" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="2.3621" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="2.4174" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="2.4692" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="2.5204" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="2.5736" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="2.6265" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0449" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0449" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="2.6809" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0458" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0458" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="2.7312" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0418" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0418" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="2.7844" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0449" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0449" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="2.8378" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0453" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0453" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="2.8893" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="2.9416" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="2.9974" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.047" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.047" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="3.0489" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="3.0992" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="3.1535" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0462" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0462" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Failure" success="False" time="3.4633" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Failure" success="False" time="0.2968" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.2968" asserts="0" success="False" result="Failure" executed="True">
                            <failure>
                              <message>[0] Expected 0, but got 2.
[1] Expected 'Celerium.RocketCyber.psd1 - 104', but got 104.
[2] Expected strings to be the same, but they were different.
Expected length: 31
Actual length:   94
Strings differ at index 0.
Expected: 'Celerium.RocketCyber.psd1 - 104'
But was:  'Do not use wildcard or $null in this field. Explicitly specify a list for FunctionsToExport.  '
           ^
[3] Expected 'Celerium.RocketCyber.psd1 - 113', but got 113.
[4] Expected strings to be the same, but they were different.
Expected length: 31
Actual length:   92
Strings differ at index 0.
Expected: 'Celerium.RocketCyber.psd1 - 113'
But was:  'Do not use wildcard or $null in this field. Explicitly specify a list for AliasesToExport.  '
           ^</message>
                              <stack-trace>[0] at ($invoke_Results | Measure-Object).Count | Should -Be 0, C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\PSScriptAnalyzer.tests.ps1:149
at &lt;ScriptBlock&gt;, C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\PSScriptAnalyzer.tests.ps1:149
[1] at $result.Line | Should -Be "$($result.ScriptName) - $($result.Line)", C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\PSScriptAnalyzer.tests.ps1:155
at &lt;ScriptBlock&gt;, C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\PSScriptAnalyzer.tests.ps1:155
[2] at $result.Message | Should -Be "$($result.ScriptName) - $($result.Line)", C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\PSScriptAnalyzer.tests.ps1:156
at &lt;ScriptBlock&gt;, C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\PSScriptAnalyzer.tests.ps1:156
[3] at $result.Line | Should -Be "$($result.ScriptName) - $($result.Line)", C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\PSScriptAnalyzer.tests.ps1:155
at &lt;ScriptBlock&gt;, C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\PSScriptAnalyzer.tests.ps1:155
[4] at $result.Message | Should -Be "$($result.ScriptName) - $($result.Line)", C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\PSScriptAnalyzer.tests.ps1:156
at &lt;ScriptBlock&gt;, C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\PSScriptAnalyzer.tests.ps1:156</stack-trace>
                            </failure>
                          </test-case>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="3.5237" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0486" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0486" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="3.5782" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0462" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0462" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="3.6331" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0458" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0458" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="3.6839" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="3.7358" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="3.7909" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0468" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0468" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="3.8425" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="3.8936" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]" executed="True" result="Success" success="True" time="3.9474" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psd1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psd1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="89.0871" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="0.0505" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="0.1054" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.047" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.047" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="0.1568" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="0.2108" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="0.2618" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="0.3134" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="0.3671" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidExclaimOperator ]" executed="True" result="Success" success="True" time="0.0456" asserts="0" description="Should pass rule [ PSAvoidExclaimOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidExclaimOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidExclaimOperator ](PSAvoidExclaimOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0456" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="0.4175" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="0.4714" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0459" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0459" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="0.524" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="0.5786" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="0.6287" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="0.6811" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0441" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0441" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="0.7356" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0464" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0464" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="0.787" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="0.8402" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0416" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0416" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="0.891" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="0.9422" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="0.9951" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0414" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="1.0453" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="1.0998" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0463" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0463" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="1.1508" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="1.2041" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidUsingAllowUnencryptedAuthentication ](PSAvoidUsingAllowUnencryptedAuthentication,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="1.2546" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="1.3072" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="1.3619" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0456" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0456" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="1.4119" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0415" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="1.4636" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="1.5172" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0456" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0456" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="1.5681" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="1.6186" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="1.6709" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0416" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0416" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="1.7217" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="1.7748" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="1.8238" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="1.8748" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="1.9276" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="1.9775" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0414" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="2.0289" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="2.0821" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="2.1325" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="2.1864" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0459" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0459" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="2.2378" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="2.2891" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="2.3432" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.045" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.045" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="2.3943" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="2.4502" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0459" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0459" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="2.5019" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="2.5551" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="2.606" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0422" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="2.6584" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="2.7121" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="2.7631" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="2.8174" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.046" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.046" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="2.8689" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="2.9209" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="2.9743" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0422" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="3.0256" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="3.0793" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0455" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0455" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="3.1304" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="3.1838" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="3.2359" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="3.2873" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0435" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="3.3417" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="3.3924" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0422" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="3.4462" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0455" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0455" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="3.4965" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.042" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.042" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="3.5511" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="3.6023" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0432" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]" executed="True" result="Success" success="True" time="3.6529" asserts="0" description="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ NotBuilt ] version of [ Celerium.RocketCyber ] with [ PSScriptAnalyzer.tests.ps1 ].[ Celerium.RocketCyber ] module PSScriptAnalyzer tests.[ Celerium.RocketCyber.psm1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\Celerium.RocketCyber\Celerium.RocketCyber\Celerium.RocketCyber.psm1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\Private\apiKeys\Add-RocketCyberAPIKey.Tests.ps1" executed="True" result="Success" success="True" time="0.2919" asserts="0" description="C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\Private\apiKeys\Add-RocketCyberAPIKey.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Add-RocketCyberAPIKey ] functions with [ Add-RocketCyberAPIKey.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0937" asserts="0" description="Testing the [ NotBuilt ] version of [ Add-RocketCyberAPIKey ] functions with [ Add-RocketCyberAPIKey.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing the [ NotBuilt ] version of [ Add-RocketCyberAPIKey ] functions with [ Add-RocketCyberAPIKey.Tests.ps1 ].[ Add-RocketCyberAPIKey ] testing functions" executed="True" result="Success" success="True" time="0.0861" asserts="0" description="Testing the [ NotBuilt ] version of [ Add-RocketCyberAPIKey ] functions with [ Add-RocketCyberAPIKey.Tests.ps1 ].[ Add-RocketCyberAPIKey ] testing functions">
                <results>
                  <test-case description="[ Add-RocketCyberAPIKey ] should have an alias" name="Testing the [ NotBuilt ] version of [ Add-RocketCyberAPIKey ] functions with [ Add-RocketCyberAPIKey.Tests.ps1 ].[ Add-RocketCyberAPIKey ] testing functions.[ Add-RocketCyberAPIKey ] should have an alias" time="0.0489" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="[ -ApiKey ] should accept a value from the pipeline" name="Testing the [ NotBuilt ] version of [ Add-RocketCyberAPIKey ] functions with [ Add-RocketCyberAPIKey.Tests.ps1 ].[ Add-RocketCyberAPIKey ] testing functions.[ -ApiKey ] should accept a value from the pipeline" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="[ -ApiKey ] should accept input" name="Testing the [ NotBuilt ] version of [ Add-RocketCyberAPIKey ] functions with [ Add-RocketCyberAPIKey.Tests.ps1 ].[ Add-RocketCyberAPIKey ] testing functions.[ -ApiKey ] should accept input" time="0.0128" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\Private\apiKeys\Get-RocketCyberAPIKey.Tests.ps1" executed="True" result="Success" success="True" time="0.3695" asserts="0" description="C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\Private\apiKeys\Get-RocketCyberAPIKey.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Get-RocketCyberAPIKey ] function with [ Get-RocketCyberAPIKey.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.1603" asserts="0" description="Testing [ Get-RocketCyberAPIKey ] function with [ Get-RocketCyberAPIKey.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Get-RocketCyberAPIKey ] function with [ Get-RocketCyberAPIKey.Tests.ps1 ].[ Get-RocketCyberAPIKey ] testing function" executed="True" result="Success" success="True" time="0.1521" asserts="0" description="Testing [ Get-RocketCyberAPIKey ] function with [ Get-RocketCyberAPIKey.Tests.ps1 ].[ Get-RocketCyberAPIKey ] testing function">
                <results>
                  <test-case description="[ -ApiKey ] should accept input" name="Testing [ Get-RocketCyberAPIKey ] function with [ Get-RocketCyberAPIKey.Tests.ps1 ].[ Get-RocketCyberAPIKey ] testing function.[ -ApiKey ] should accept input" time="0.0081" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Pipeline  - [ -ApiKey ] should return a secure string" name="Testing [ Get-RocketCyberAPIKey ] function with [ Get-RocketCyberAPIKey.Tests.ps1 ].[ Get-RocketCyberAPIKey ] testing function.Pipeline  - [ -ApiKey ] should return a secure string" time="0.0997" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter - [ -ApiKey ] should return a secure string" name="Testing [ Get-RocketCyberAPIKey ] function with [ Get-RocketCyberAPIKey.Tests.ps1 ].[ Get-RocketCyberAPIKey ] testing function.Parameter - [ -ApiKey ] should return a secure string" time="0.0122" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Using [ -AsPlainText ] should return [ -ApiKey ] as a string" name="Testing [ Get-RocketCyberAPIKey ] function with [ Get-RocketCyberAPIKey.Tests.ps1 ].[ Get-RocketCyberAPIKey ] testing function.Using [ -AsPlainText ] should return [ -ApiKey ] as a string" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="If [ -ApiKey ] is empty it should throw a warning" name="Testing [ Get-RocketCyberAPIKey ] function with [ Get-RocketCyberAPIKey.Tests.ps1 ].[ Get-RocketCyberAPIKey ] testing function.If [ -ApiKey ] is empty it should throw a warning" time="0.0071" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\Private\apiKeys\Remove-RocketCyberAPIKey.Tests.ps1" executed="True" result="Success" success="True" time="0.2439" asserts="0" description="C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\Private\apiKeys\Remove-RocketCyberAPIKey.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Remove-RocketCyberAPIKey ] function with [ Remove-RocketCyberAPIKey.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Testing [ Remove-RocketCyberAPIKey ] function with [ Remove-RocketCyberAPIKey.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Remove-RocketCyberAPIKey ] function with [ Remove-RocketCyberAPIKey.Tests.ps1 ].[ Remove-RocketCyberAPIKey ] testing function" executed="True" result="Success" success="True" time="0.0287" asserts="0" description="Testing [ Remove-RocketCyberAPIKey ] function with [ Remove-RocketCyberAPIKey.Tests.ps1 ].[ Remove-RocketCyberAPIKey ] testing function">
                <results>
                  <test-case description="Running [ Remove-RocketCyberAPIKey ] should remove all apiKey variables" name="Testing [ Remove-RocketCyberAPIKey ] function with [ Remove-RocketCyberAPIKey.Tests.ps1 ].[ Remove-RocketCyberAPIKey ] testing function.Running [ Remove-RocketCyberAPIKey ] should remove all apiKey variables" time="0.0082" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="If the [ RocketCyberApiKey ] is already empty a warning should be thrown" name="Testing [ Remove-RocketCyberAPIKey ] function with [ Remove-RocketCyberAPIKey.Tests.ps1 ].[ Remove-RocketCyberAPIKey ] testing function.If the [ RocketCyberApiKey ] is already empty a warning should be thrown" time="0.0119" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\Private\apiKeys\Test-RocketCyberAPIKey.Tests.ps1" executed="True" result="Success" success="True" time="0.8467" asserts="0" description="C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\Private\apiKeys\Test-RocketCyberAPIKey.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Test-RocketCyberAPIKey ] function with [ Test-RocketCyberAPIKey.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.643" asserts="0" description="Testing [ Test-RocketCyberAPIKey ] function with [ Test-RocketCyberAPIKey.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Test-RocketCyberAPIKey ] function with [ Test-RocketCyberAPIKey.Tests.ps1 ].[ Test-RocketCyberAPIKey ] testing function" executed="True" result="Success" success="True" time="0.6357" asserts="0" description="Testing [ Test-RocketCyberAPIKey ] function with [ Test-RocketCyberAPIKey.Tests.ps1 ].[ Test-RocketCyberAPIKey ] testing function">
                <results>
                  <test-case description="[ Test-RocketCyberAPIKey ] with a bad API key should fail to authenticate" name="Testing [ Test-RocketCyberAPIKey ] function with [ Test-RocketCyberAPIKey.Tests.ps1 ].[ Test-RocketCyberAPIKey ] testing function.[ Test-RocketCyberAPIKey ] with a bad API key should fail to authenticate" time="0.6277" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\Private\baseUri\Add-RocketCyberBaseURI.Tests.ps1" executed="True" result="Success" success="True" time="0.4729" asserts="0" description="C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\Private\baseUri\Add-RocketCyberBaseURI.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Add-RocketCyberBaseURI ] functions with [ Add-RocketCyberBaseURI.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.2651" asserts="0" description="Testing [ Add-RocketCyberBaseURI ] functions with [ Add-RocketCyberBaseURI.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Add-RocketCyberBaseURI ] functions with [ Add-RocketCyberBaseURI.Tests.ps1 ].[ Add-RocketCyberBaseURI ] testing functions" executed="True" result="Success" success="True" time="0.2574" asserts="0" description="Testing [ Add-RocketCyberBaseURI ] functions with [ Add-RocketCyberBaseURI.Tests.ps1 ].[ Add-RocketCyberBaseURI ] testing functions">
                <results>
                  <test-case description="[ Add-RocketCyberBaseURI ] should have an alias" name="Testing [ Add-RocketCyberBaseURI ] functions with [ Add-RocketCyberBaseURI.Tests.ps1 ].[ Add-RocketCyberBaseURI ] testing functions.[ Add-RocketCyberBaseURI ] should have an alias" time="0.0097" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Without parameters should return the default URI" name="Testing [ Add-RocketCyberBaseURI ] functions with [ Add-RocketCyberBaseURI.Tests.ps1 ].[ Add-RocketCyberBaseURI ] testing functions.Without parameters should return the default URI" time="0.0119" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should accept a value from the pipeline" name="Testing [ Add-RocketCyberBaseURI ] functions with [ Add-RocketCyberBaseURI.Tests.ps1 ].[ Add-RocketCyberBaseURI ] testing functions.Should accept a value from the pipeline" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="With parameter -BaseUri  should return what was inputted" name="Testing [ Add-RocketCyberBaseURI ] functions with [ Add-RocketCyberBaseURI.Tests.ps1 ].[ Add-RocketCyberBaseURI ] testing functions.With parameter -BaseUri  should return what was inputted" time="0.0089" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="With parameter -DataCenter US should return the default URI" name="Testing [ Add-RocketCyberBaseURI ] functions with [ Add-RocketCyberBaseURI.Tests.ps1 ].[ Add-RocketCyberBaseURI ] testing functions.With parameter -DataCenter US should return the default URI" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="With parameter -DataCenter EU should return the default URI" name="Testing [ Add-RocketCyberBaseURI ] functions with [ Add-RocketCyberBaseURI.Tests.ps1 ].[ Add-RocketCyberBaseURI ] testing functions.With parameter -DataCenter EU should return the default URI" time="0.008" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="With invalid parameter value -DataCenter Space should return an error" name="Testing [ Add-RocketCyberBaseURI ] functions with [ Add-RocketCyberBaseURI.Tests.ps1 ].[ Add-RocketCyberBaseURI ] testing functions.With invalid parameter value -DataCenter Space should return an error" time="0.1373" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="The default URI should NOT contain a trailing forward slash" name="Testing [ Add-RocketCyberBaseURI ] functions with [ Add-RocketCyberBaseURI.Tests.ps1 ].[ Add-RocketCyberBaseURI ] testing functions.The default URI should NOT contain a trailing forward slash" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="A custom URI should NOT contain a trailing forward slash" name="Testing [ Add-RocketCyberBaseURI ] functions with [ Add-RocketCyberBaseURI.Tests.ps1 ].[ Add-RocketCyberBaseURI ] testing functions.A custom URI should NOT contain a trailing forward slash" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\Private\baseUri\Get-RocketCyberBaseURI.Tests.ps1" executed="True" result="Success" success="True" time="0.2659" asserts="0" description="C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\Private\baseUri\Get-RocketCyberBaseURI.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Get-RocketCyberBaseURI ] function with [ Get-RocketCyberBaseURI.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0625" asserts="0" description="Testing [ Get-RocketCyberBaseURI ] function with [ Get-RocketCyberBaseURI.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Get-RocketCyberBaseURI ] function with [ Get-RocketCyberBaseURI.Tests.ps1 ].[ Get-RocketCyberBaseURI ] testing function" executed="True" result="Success" success="True" time="0.0545" asserts="0" description="Testing [ Get-RocketCyberBaseURI ] function with [ Get-RocketCyberBaseURI.Tests.ps1 ].[ Get-RocketCyberBaseURI ] testing function">
                <results>
                  <test-case description="The default URI should be returned" name="Testing [ Get-RocketCyberBaseURI ] function with [ Get-RocketCyberBaseURI.Tests.ps1 ].[ Get-RocketCyberBaseURI ] testing function.The default URI should be returned" time="0.0116" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="The URI should be a string" name="Testing [ Get-RocketCyberBaseURI ] function with [ Get-RocketCyberBaseURI.Tests.ps1 ].[ Get-RocketCyberBaseURI ] testing function.The URI should be a string" time="0.0124" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="The default URI should NOT contain a trailing forward slash" name="Testing [ Get-RocketCyberBaseURI ] function with [ Get-RocketCyberBaseURI.Tests.ps1 ].[ Get-RocketCyberBaseURI ] testing function.The default URI should NOT contain a trailing forward slash" time="0.0072" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="A custom URI should NOT contain a trailing forward slash" name="Testing [ Get-RocketCyberBaseURI ] function with [ Get-RocketCyberBaseURI.Tests.ps1 ].[ Get-RocketCyberBaseURI ] testing function.A custom URI should NOT contain a trailing forward slash" time="0.0072" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="If the BaseUri is not set a warning should be thrown" name="Testing [ Get-RocketCyberBaseURI ] function with [ Get-RocketCyberBaseURI.Tests.ps1 ].[ Get-RocketCyberBaseURI ] testing function.If the BaseUri is not set a warning should be thrown" time="0.0068" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\Private\baseUri\Remove-RocketCyberBaseURI.Tests.ps1" executed="True" result="Success" success="True" time="0.2346" asserts="0" description="C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\Private\baseUri\Remove-RocketCyberBaseURI.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Remove-RocketCyberBaseURI ] function with [ Remove-RocketCyberBaseURI.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.034" asserts="0" description="Testing [ Remove-RocketCyberBaseURI ] function with [ Remove-RocketCyberBaseURI.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Remove-RocketCyberBaseURI ] function with [ Remove-RocketCyberBaseURI.Tests.ps1 ].[ Remove-RocketCyberBaseURI ] testing function" executed="True" result="Success" success="True" time="0.0235" asserts="0" description="Testing [ Remove-RocketCyberBaseURI ] function with [ Remove-RocketCyberBaseURI.Tests.ps1 ].[ Remove-RocketCyberBaseURI ] testing function">
                <results>
                  <test-case description="The BaseUri variable should not longer exist" name="Testing [ Remove-RocketCyberBaseURI ] function with [ Remove-RocketCyberBaseURI.Tests.ps1 ].[ Remove-RocketCyberBaseURI ] testing function.The BaseUri variable should not longer exist" time="0.0074" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="If the BaseUri is already gone a warning should be thrown" name="Testing [ Remove-RocketCyberBaseURI ] function with [ Remove-RocketCyberBaseURI.Tests.ps1 ].[ Remove-RocketCyberBaseURI ] testing function.If the BaseUri is already gone a warning should be thrown" time="0.008" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\Private\moduleSettings\Export-RocketCyberModuleSettings.Tests.ps1" executed="True" result="Success" success="True" time="0.2989" asserts="0" description="C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\Private\moduleSettings\Export-RocketCyberModuleSettings.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Export-RocketCyberModuleSettings ] function with [ Export-RocketCyberModuleSettings.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0893" asserts="0" description="Testing [ Export-RocketCyberModuleSettings ] function with [ Export-RocketCyberModuleSettings.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Export-RocketCyberModuleSettings ] function with [ Export-RocketCyberModuleSettings.Tests.ps1 ].[ Export-RocketCyberModuleSettings ] testing function" executed="True" result="Success" success="True" time="0.0813" asserts="0" description="Testing [ Export-RocketCyberModuleSettings ] function with [ Export-RocketCyberModuleSettings.Tests.ps1 ].[ Export-RocketCyberModuleSettings ] testing function">
                <results>
                  <test-case description="Should export successfully" name="Testing [ Export-RocketCyberModuleSettings ] function with [ Export-RocketCyberModuleSettings.Tests.ps1 ].[ Export-RocketCyberModuleSettings ] testing function.Should export successfully" time="0.0258" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Configuration directory should be hidden" name="Testing [ Export-RocketCyberModuleSettings ] function with [ Export-RocketCyberModuleSettings.Tests.ps1 ].[ Export-RocketCyberModuleSettings ] testing function.Configuration directory should be hidden" time="0.0182" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Configuration file should contain required values" name="Testing [ Export-RocketCyberModuleSettings ] function with [ Export-RocketCyberModuleSettings.Tests.ps1 ].[ Export-RocketCyberModuleSettings ] testing function.Configuration file should contain required values" time="0.0285" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\Private\moduleSettings\Get-RocketCyberModuleSettings.Tests.ps1" executed="True" result="Success" success="True" time="0.2695" asserts="0" description="C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\Private\moduleSettings\Get-RocketCyberModuleSettings.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Get-RocketCyberModuleSettings ] function with [ Get-RocketCyberModuleSettings.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0626" asserts="0" description="Testing [ Get-RocketCyberModuleSettings ] function with [ Get-RocketCyberModuleSettings.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Get-RocketCyberModuleSettings ] function with [ Get-RocketCyberModuleSettings.Tests.ps1 ].[ Get-RocketCyberModuleSettings ] testing function" executed="True" result="Success" success="True" time="0.0544" asserts="0" description="Testing [ Get-RocketCyberModuleSettings ] function with [ Get-RocketCyberModuleSettings.Tests.ps1 ].[ Get-RocketCyberModuleSettings ] testing function">
                <results>
                  <test-case description="Configuration directory should be hidden" name="Testing [ Get-RocketCyberModuleSettings ] function with [ Get-RocketCyberModuleSettings.Tests.ps1 ].[ Get-RocketCyberModuleSettings ] testing function.Configuration directory should be hidden" time="0.0125" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Configuration file should contain required values" name="Testing [ Get-RocketCyberModuleSettings ] function with [ Get-RocketCyberModuleSettings.Tests.ps1 ].[ Get-RocketCyberModuleSettings ] testing function.Configuration file should contain required values" time="0.0298" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\Private\moduleSettings\Import-RocketCyberModuleSettings.Tests.ps1" executed="True" result="Success" success="True" time="0.2903" asserts="0" description="C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\Private\moduleSettings\Import-RocketCyberModuleSettings.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Import-RocketCyberModuleSettings ] function with [ Import-RocketCyberModuleSettings.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0858" asserts="0" description="Testing [ Import-RocketCyberModuleSettings ] function with [ Import-RocketCyberModuleSettings.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Import-RocketCyberModuleSettings ] function with [ Import-RocketCyberModuleSettings.Tests.ps1 ].[ Import-RocketCyberModuleSettings ] testing function" executed="True" result="Success" success="True" time="0.0785" asserts="0" description="Testing [ Import-RocketCyberModuleSettings ] function with [ Import-RocketCyberModuleSettings.Tests.ps1 ].[ Import-RocketCyberModuleSettings ] testing function">
                <results>
                  <test-case description="No configuration should populate baseline variables" name="Testing [ Import-RocketCyberModuleSettings ] function with [ Import-RocketCyberModuleSettings.Tests.ps1 ].[ Import-RocketCyberModuleSettings ] testing function.No configuration should populate baseline variables" time="0.0113" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Saved configuration session should contain required variables" name="Testing [ Import-RocketCyberModuleSettings ] function with [ Import-RocketCyberModuleSettings.Tests.ps1 ].[ Import-RocketCyberModuleSettings ] testing function.Saved configuration session should contain required variables" time="0.0316" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Saved configuration session should NOT contain temp variables" name="Testing [ Import-RocketCyberModuleSettings ] function with [ Import-RocketCyberModuleSettings.Tests.ps1 ].[ Import-RocketCyberModuleSettings ] testing function.Saved configuration session should NOT contain temp variables" time="0.0273" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\Private\moduleSettings\Initialize-RocketCyberModuleSettings.Tests.ps1" executed="True" result="Success" success="True" time="0.6046" asserts="0" description="C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\Private\moduleSettings\Initialize-RocketCyberModuleSettings.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Initialize-RocketCyberModuleSettings ] function with [ Initialize-RocketCyberModuleSettings.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.3935" asserts="0" description="Testing [ Initialize-RocketCyberModuleSettings ] function with [ Initialize-RocketCyberModuleSettings.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Initialize-RocketCyberModuleSettings ] function with [ Initialize-RocketCyberModuleSettings.Tests.ps1 ].[ Initialize-RocketCyberModuleSettings ] testing function" executed="True" result="Success" success="True" time="0.3855" asserts="0" description="Testing [ Initialize-RocketCyberModuleSettings ] function with [ Initialize-RocketCyberModuleSettings.Tests.ps1 ].[ Initialize-RocketCyberModuleSettings ] testing function">
                <results>
                  <test-case description="When imported WITHOUT a saved configuration baseline variables should exist" name="Testing [ Initialize-RocketCyberModuleSettings ] function with [ Initialize-RocketCyberModuleSettings.Tests.ps1 ].[ Initialize-RocketCyberModuleSettings ] testing function.When imported WITHOUT a saved configuration baseline variables should exist" time="0.1383" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When imported WITH a saved configuration baseline variables should exist" name="Testing [ Initialize-RocketCyberModuleSettings ] function with [ Initialize-RocketCyberModuleSettings.Tests.ps1 ].[ Initialize-RocketCyberModuleSettings ] testing function.When imported WITH a saved configuration baseline variables should exist" time="0.2384" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\Private\moduleSettings\Remove-RocketCyberModuleSettings.Tests.ps1" executed="True" result="Success" success="True" time="0.2813" asserts="0" description="C:\Celerium\Projects\_API\Celerium.RocketCyber\tests\Private\moduleSettings\Remove-RocketCyberModuleSettings.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Remove-RocketCyberModuleSettings ] function with [ Remove-RocketCyberModuleSettings.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0681" asserts="0" description="Testing [ Remove-RocketCyberModuleSettings ] function with [ Remove-RocketCyberModuleSettings.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Remove-RocketCyberModuleSettings ] function with [ Remove-RocketCyberModuleSettings.Tests.ps1 ].[ Remove-RocketCyberModuleSettings ] testing function" executed="True" result="Success" success="True" time="0.0597" asserts="0" description="Testing [ Remove-RocketCyberModuleSettings ] function with [ Remove-RocketCyberModuleSettings.Tests.ps1 ].[ Remove-RocketCyberModuleSettings ] testing function">
                <results>
                  <test-case description="No configuration should throw a warning" name="Testing [ Remove-RocketCyberModuleSettings ] function with [ Remove-RocketCyberModuleSettings.Tests.ps1 ].[ Remove-RocketCyberModuleSettings ] testing function.No configuration should throw a warning" time="0.0073" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Saved configuration should be removed" name="Testing [ Remove-RocketCyberModuleSettings ] function with [ Remove-RocketCyberModuleSettings.Tests.ps1 ].[ Remove-RocketCyberModuleSettings ] testing function.Saved configuration should be removed" time="0.0179" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Saved configuration &amp; variables should be removed" name="Testing [ Remove-RocketCyberModuleSettings ] function with [ Remove-RocketCyberModuleSettings.Tests.ps1 ].[ Remove-RocketCyberModuleSettings ] testing function.Saved configuration &amp; variables should be removed" time="0.026" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>