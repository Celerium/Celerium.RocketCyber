trigger:
- main

pool:
  VMImage: ubuntu-latest

variables:
  Version: 1.1.0
  ModuleName: Celerium.RocketCyber

jobs:

# Windows - nonCore

  - job: Window_PowerShell
    timeoutInMinutes: 10
    pool:
      VMImage: 'windows-latest'

    steps:
    - task: PowerShell@2
      displayName: Install-Prerequisites
      name: InstallPrerequisites
      inputs:
        pwsh: false
        targetType: filePath
        filePath: $(Build.SourcesDirectory)/build/Install-Prerequisites.ps1

    - task: PowerShell@2
      displayName: Build Documentation__Invoke-HelpContent
      name: BuildDocumentation
      inputs:
        pwsh: false
        targetType: filePath
        filePath: $(Build.SourcesDirectory)/build/Invoke-HelpContent.ps1
        arguments: -Verbose

    - task: PowerShell@2
      displayName: Build Module__Invoke-ModuleBuild
      name: BuildModule
      inputs:
        pwsh: false
        targetType: filePath
        filePath: $(Build.SourcesDirectory)/build/Invoke-ModuleBuild.ps1
        arguments: -Version $(Version)

    - task: PowerShell@2
      displayName: Testing__Invoke-PesterTests
      name: PesterTests
      inputs:
        pwsh: false
        targetType: filePath
        filePath: $(Build.SourcesDirectory)/build/Invoke-PesterTests.ps1
        arguments: -Version $(Version) -BuildTarget Built

    - task: PublishBuildArtifacts@1
      displayName: Publish Artifact
      name: PublishArtifact
      inputs:
        ArtifactName: $(ModuleName)-$(Version)
        PathtoPublish: $(Build.SourcesDirectory)/build/$(ModuleName)/$(Version)

# Windows - Core

  - job: Window_PowerShell_Core
    timeoutInMinutes: 10
    pool:
      VMImage: 'windows-latest'

    steps:
    - task: PowerShell@2
      displayName: Install-Prerequisites
      name: InstallPrerequisites
      inputs:
        pwsh: true
        targetType: filePath
        filePath: $(Build.SourcesDirectory)/build/Install-Prerequisites.ps1

    - task: PowerShell@2
      displayName: Build Documentation__Invoke-HelpContent
      name: BuildDocumentation
      inputs:
        pwsh: true
        targetType: filePath
        filePath: $(Build.SourcesDirectory)/build/Invoke-HelpContent.ps1

    - task: PowerShell@2
      displayName: Build Module__Invoke-ModuleBuild
      name: BuildModule
      inputs:
        pwsh: true
        targetType: filePath
        filePath: $(Build.SourcesDirectory)/build/Invoke-ModuleBuild.ps1
        arguments: -Version $(Version)

    - task: PowerShell@2
      displayName: Testing__Invoke-PesterTests
      name: PesterTests
      inputs:
        pwsh: true
        targetType: filePath
        filePath: $(Build.SourcesDirectory)/build/Invoke-PesterTests.ps1
        arguments: -Version $(Version) -BuildTarget Built

    - task: PublishBuildArtifacts@1
      displayName: Publish Artifact
      name: PublishArtifact
      inputs:
        ArtifactName: $(ModuleName)-$(Version)
        PathtoPublish: $(Build.SourcesDirectory)/build/$(ModuleName)/$(Version)

# Linux - Ubuntu

  - job: Ubuntu
    timeoutInMinutes: 10
    pool:
      VMImage: 'ubuntu-latest'

    steps:
    - task: PowerShell@2
      displayName: Install-Prerequisites
      name: InstallPrerequisites
      inputs:
        pwsh: true
        targetType: filePath
        filePath: $(Build.SourcesDirectory)/build/Install-Prerequisites.ps1

    - task: PowerShell@2
      displayName: Build Documentation__Invoke-HelpContent
      name: BuildDocumentation
      inputs:
        pwsh: true
        targetType: filePath
        filePath: $(Build.SourcesDirectory)/build/Invoke-HelpContent.ps1

    - task: PowerShell@2
      displayName: Build Module__Invoke-ModuleBuild
      name: BuildModule
      inputs:
        pwsh: true
        targetType: filePath
        filePath: $(Build.SourcesDirectory)/build/Invoke-ModuleBuild.ps1
        arguments: -Version $(Version)

    - task: PowerShell@2
      displayName: Testing__Invoke-PesterTests
      name: PesterTests
      inputs:
        pwsh: true
        targetType: filePath
        filePath: $(Build.SourcesDirectory)/build/Invoke-PesterTests.ps1
        arguments: -Version $(Version) -BuildTarget Built

    - task: PublishBuildArtifacts@1
      displayName: Publish Artifact
      name: PublishArtifact
      inputs:
        ArtifactName: $(ModuleName)-$(Version)
        PathtoPublish: $(Build.SourcesDirectory)/build/$(ModuleName)/$(Version)

# Linux - macOS

  - job: macOS
    timeoutInMinutes: 10
    pool:
      VMImage: 'macOS-latest'

    steps:
    - task: PowerShell@2
      displayName: Install-Prerequisites
      name: InstallPrerequisites
      inputs:
        pwsh: true
        targetType: filePath
        filePath: $(Build.SourcesDirectory)/build/Install-Prerequisites.ps1

    - task: PowerShell@2
      displayName: Build Documentation__Invoke-HelpContent
      name: BuildDocumentation
      inputs:
        pwsh: true
        targetType: filePath
        filePath: $(Build.SourcesDirectory)/build/Invoke-HelpContent.ps1

    - task: PowerShell@2
      displayName: Build Module__Invoke-ModuleBuild
      name: BuildModule
      inputs:
        pwsh: true
        targetType: filePath
        filePath: $(Build.SourcesDirectory)/build/Invoke-ModuleBuild.ps1
        arguments: -Version $(Version)

    - task: PowerShell@2
      displayName: Testing__Invoke-PesterTests
      name: PesterTests
      inputs:
        pwsh: true
        targetType: filePath
        filePath: $(Build.SourcesDirectory)/build/Invoke-PesterTests.ps1
        arguments: -Version $(Version) -BuildTarget Built

    - task: PublishBuildArtifacts@1
      displayName: Publish Artifact
      name: PublishArtifact
      inputs:
        ArtifactName: $(ModuleName)-$(Version)
        PathtoPublish: $(Build.SourcesDirectory)/build/$(ModuleName)/$(Version)
